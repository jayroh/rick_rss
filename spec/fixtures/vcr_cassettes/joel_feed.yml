---
http_interactions:
- request:
    method: get
    uri: http://www.joeloliveira.com/rss.xml
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Feedjira 2.1.2
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Amz-Id-2:
      - 5gr2jO6rDpoiQKlfUTC3bgu2xrKOkpyq8iZFfmnhR31etZURu9sE3OyCqxe3osYpqWf+6741MRY=
      X-Amz-Request-Id:
      - E52BFD604FAE1AAA
      Date:
      - Thu, 06 Apr 2017 15:45:16 GMT
      Last-Modified:
      - Tue, 20 Sep 2016 15:59:59 GMT
      Etag:
      - '"834a7ee1c84d8906547ab82bdf5a10de"'
      Content-Type:
      - application/rss+xml
      Content-Length:
      - '164887'
      Server:
      - AmazonS3
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        <?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Joel Oliveira</title>
    <link>http://www.joeloliveira.com/</link>
    <atom:link href="http://www.joeloliveira.com/rss.xml" rel="self" type="application/rss+xml" />
    <description>A software engineer in Boston writing mostly ruby. He loves beer and bulldogs and his family.</description>
    <language>en-us</language>
    <pubDate>Tue, 20 Sep 2016 11:58:58 -0400</pubDate>
    <lastBuildDate>Tue, 20 Sep 2016 11:58:58 -0400</lastBuildDate>
    
      
    
      
      <item>
        <title>Correctly Syntax Highlight Your Shell Scripts</title>
        <link>http://www.joeloliveira.com/2016/01/05/make-vim-recognize-your-shell-scripts.html</link>
        <pubDate>Mon, 04 Jan 2016 00:00:00 -0500</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2016/01/05/correctly-syntax-highlight-your-shell-scripts</guid>
        <description>&lt;p&gt;Not all shell scripts are created equal. You may have a &lt;code&gt;do-something.sh&lt;/code&gt; script, or maybe you call
it &lt;code&gt;do-something&lt;/code&gt;? Maybe it uses the bourne shell? Maybe bash? Maybe zsh? I don&amp;#39;t know. We all have
opinions.&lt;/p&gt;

&lt;p&gt;You&amp;#39;re probably using vim to edit that thing though, right? If you&amp;#39;re reading this, you probably do.
Isn&amp;#39;t it bothersome when you&amp;#39;re editing that file and want it highlighted with the correct syntax?
That&amp;#39;s easy enough, if you use the &lt;code&gt;.sh&lt;/code&gt; extension.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;au&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;BufRead&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;BufNewFile&lt;/span&gt; *.&lt;span class=&quot;k&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sh&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It&amp;#39;s less easy if you mix and match shells or don&amp;#39;t use the file extension. I sometimes don&amp;#39;t. In
those cases I check for what&amp;#39;s going on in the she-bang.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;au&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;BufRead&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;BufNewFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;BufWrite&lt;/span&gt; *
      \ &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; getline&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;#!/bin/bash&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
      \   &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
      \ &lt;span class=&quot;k&quot;&gt;endif&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;au&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;BufRead&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;BufNewFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;BufWrite&lt;/span&gt; *
      \ &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; getline&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;#!/bin/zsh&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
      \   &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ft&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;zsh &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
      \ &lt;span class=&quot;k&quot;&gt;endif&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Maybe that&amp;#39;s overkill. Have a better solution? I bet you do :). &lt;a href=&quot;https://twitter.com/jayroh&quot;&gt;Let me know&lt;/a&gt;!&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>Writing in Markdown With Vim</title>
        <link>http://www.joeloliveira.com/2016/01/02/writing-in-markdown-with-vim.html</link>
        <pubDate>Sat, 02 Jan 2016 00:00:00 -0500</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2016/01/02/writing-in-markdown-with-vim</guid>
        <description>&lt;p&gt;While writing &lt;a href=&quot;http://www.joeloliveira.com/2016/01/01/adios-2015-you-were-alright.html&quot;&gt;a post yesterday&lt;/a&gt; I noticed there were some gaps in my vim setup for when I&amp;#39;m
authoring a markdown file so here are a few tips for polishing up your markdown experience in vim,
specifically for jekyll blogs.&lt;/p&gt;

&lt;h3 id=&quot;front-matter&quot;&gt;Front Matter&lt;/h3&gt;

&lt;p&gt;Starting at the top, literally, with the front matter. It was looking a bit weird out of the box:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.evernote.com/l/AUqBTP-soRdBka6Ux6dYTlrPxiiMTso_GXkB/image.png&quot; alt=&quot;jekyll front matter better&quot;&gt;&lt;/p&gt;

&lt;p&gt;It&amp;#39;s rather inconsequential data compared to the meat of the document, the actual content. I found a
&lt;a href=&quot;http://www.codeography.com/2010/02/20/making-vim-play-nice-with-jekylls-yaml-front-matter.html&quot;&gt;helpful blog post&lt;/a&gt; with some details that worked for me. The heart of which is to parse between the
&lt;code&gt;---&lt;/code&gt;s and consider this content a comment.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;au&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;BufNewFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;BufRead&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;BufWrite&lt;/span&gt; *.md &lt;span class=&quot;nb&quot;&gt;syntax&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; Comment &lt;span class=&quot;sr&quot;&gt;/\%^---\_.\{-}---$/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After, it looks a little less odd.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.evernote.com/l/AUp8HJ6J_C9PibrDKDp7iEKyB16O5W_FAmkB/image.png&quot; alt=&quot;jekyll front matter after&quot;&gt;&lt;/p&gt;

&lt;h3 id=&quot;textwidth&quot;&gt;Textwidth&lt;/h3&gt;

&lt;p&gt;I prefer a little more space when I&amp;#39;m writing so I change the width before text wraps to something
slightly more than my default 80 character width - like 100 characters. In my autocommand group I
place something like:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;au&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;FileType&lt;/span&gt; markdown &lt;span class=&quot;k&quot;&gt;setlocal&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;textwidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;fenced-in-languages&quot;&gt;Fenced-in Languages&lt;/h3&gt;

&lt;p&gt;If you have many, or maybe super-specific, languages and syntaxes you commonly use in your markdown
you can specify them in your vimrc to be interpreted as such.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;g&lt;/span&gt;:markdown_fenced_languages &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; [&lt;span class=&quot;s1&quot;&gt;&amp;#39;javascript&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;ruby&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sh&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;yaml&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;javascript&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;html&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;vim&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;coffee&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;json&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;diff&amp;#39;&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;snippets&quot;&gt;Snippets&lt;/h3&gt;

&lt;p&gt;I use &lt;a href=&quot;https://github.com/msanders/snipmate.vim&quot;&gt;snipmate&lt;/a&gt; but I guess the same can be applied with something like &lt;a href=&quot;https://github.com/SirVer/ultisnips&quot;&gt;UltiSnips&lt;/a&gt;? Probably. In any
case, snippets are a lifesaver for the occasional piece of code or markup you can either never
remember the exact syntax for, or are slightly awkward to type. For me it&amp;#39;s more often the former.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;~/.vim/snippets/markdown.snippets&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;snippet a
    [${1:text}](${2:http://})
snippet img
    ![${1:alt}](${2:http://})
snippet front
    ---
    title: ${1:Title}
    author: Joel
    layout: post
    permalink: `strftime(&amp;quot;/%Y/%m/%d&amp;quot;)`/${2:slug}.html
    ---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first two are for links and image tags, respectively. I consistently confuse the two so why
leave it to guessing? The &lt;code&gt;front&lt;/code&gt; snippet is handy in that date for the permalink is automatically
populated when the snippet is expanded.&lt;/p&gt;

&lt;h3 id=&quot;preview-your-markdown&quot;&gt;Preview Your Markdown&lt;/h3&gt;

&lt;p&gt;A &lt;a href=&quot;https://twitter.com/ches/status/683999093597716480&quot;&gt;tweet from Ches&lt;/a&gt; asking about previewing documents piqued my curiosity so I decided to look into it
a little further. His suggestion to try the QuickLook plugin was met with failure, as he mentioned,
as there&amp;#39;s some weirdness when you try to launch from terminal. From finder it seems to work just
fine but that defeats the purpose of being vim-driven, right? The next best thing would be to
leverage a native mac app to get a look at what our rendered markdown files look like. The app I
prefer is called &lt;a href=&quot;http://macdown.uranusjr.com/&quot;&gt;MacDown&lt;/a&gt; and has plenty of good features if you ever feel like dropping into a gui
app instead of vim.&lt;/p&gt;

&lt;p&gt;MacDown comes with a cli command you can use to open documents from the terminal but I&amp;#39;ve found that
it doesn&amp;#39;t retain your preferences and switches to the defaults once you use it. Using OS X&amp;#39;s &lt;code&gt;open&lt;/code&gt;
command, however, does retain your preferences. So, about getting vim to play nice with this? Not so
hard:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;map &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;leader&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;pre&lt;/span&gt; :&lt;span class=&quot;k&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;cr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;:&lt;span class=&quot;k&quot;&gt;silent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!&lt;/span&gt;open &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;a&lt;/span&gt; MacDown % &lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/dev/&lt;/span&gt;null &amp;amp;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;cr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;:&lt;span class=&quot;k&quot;&gt;redraw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;!&amp;lt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;cr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So &lt;code&gt;&amp;lt;leader&amp;gt;pre&lt;/code&gt; will now open up MacDown with the current document so I can get a good look. Not
bad!&lt;/p&gt;

&lt;p&gt;The changes to MacDown&amp;#39;s preferences I&amp;#39;ve found useful:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;General &amp;gt; Put editor on the right&lt;/em&gt;. I don&amp;#39;t care much about the editor, so it gets shoved right.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Rendering &amp;gt; Detect Jekyll front-matter&lt;/em&gt;. For those of us jekyll users.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;helpful-plugins&quot;&gt;Helpful Plugins&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/junegunn/goyo.vim&quot;&gt;goyo.vim&lt;/a&gt; plugin. A really nice distraction free writing plugin suggested by &lt;a href=&quot;https://twitter.com/thegreatape&quot;&gt;Thomas&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tpope/vim-markdown&quot;&gt;tpope&amp;#39;s markdown&lt;/a&gt; plugin. Arguably unecessary but provides some fenced codeblock extras.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/christoomey/vim-titlecase&quot;&gt;Chris Toomey&amp;#39;s titlecase&lt;/a&gt; plugin. &lt;em&gt;Teach Vim about titlecase, with support for motions and text objects&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/christoomey/vim-quicklink&quot;&gt;Chris Toomey&amp;#39;s quicklink&lt;/a&gt; plugin. This is nothing short of beautiful. &lt;em&gt;A Vim plugin for quickly
looking up a topic in google and inserting the relevant link&lt;/em&gt;. &lt;a href=&quot;https://www.youtube.com/watch?v=lwD8G1P52Sk&quot;&gt;Bonus video&lt;/a&gt; with some insight on these
two plugins from Chris.&lt;/li&gt;
&lt;/ul&gt;
</description>
      </item>
      
    
      
      <item>
        <title>Adios 2015. You were alright.</title>
        <link>http://www.joeloliveira.com/2016/01/01/adios-2015-you-were-alright.html</link>
        <pubDate>Fri, 01 Jan 2016 00:00:00 -0500</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2016/01/01/adios-2015-you-were-alright</guid>
        <description>&lt;p&gt;I&amp;#39;ll get right into it - 2015 was a good year. And, there&amp;#39;s no way around this, it was because of
the birth of my son, Grayson.&lt;/p&gt;

&lt;p&gt;That&amp;#39;s pretty much it. That&amp;#39;s the TLDR version of our year.&lt;/p&gt;

&lt;h3 id=&quot;the-longer-version&quot;&gt;The Longer Version&lt;/h3&gt;

&lt;p&gt;There isn&amp;#39;t a single event in the 38 years of my life that has had as profound an effect on my day
to day life as the birth of this child. Most things people tell you &amp;ndash; &amp;quot;There&amp;#39;s you the day
before, there&amp;#39;s you the day after, they&amp;#39;re night and day&amp;quot;, etc &amp;ndash; that&amp;#39;s certainly true. You
can&amp;#39;t escape that. There are other adages that are a little less universally true (&amp;quot;It was the
greatest day of my life!&amp;quot; ... actually, it was stressful), but we&amp;#39;re all our own people, right? In
any case, the incredible evolution in me personally has been this incredible shift philosophically
where I can now consider the path in front of my son to be a clean slate. I no longer mull over what
happened before, as that is history writ, instead I can concentrate moving forward on the wonderful
future we, he, I, have ahead of us. My enthusiasm for &lt;em&gt;this&lt;/em&gt; new year is unlike almost all before.&lt;/p&gt;

&lt;h3 id=&quot;elsewhere&quot;&gt;Elsewhere&lt;/h3&gt;

&lt;p&gt;Knowing that Sara and I were expecting Gray to join us I started 2015 with a bit of a resolve to
work on a few things personally and emotionally. I can look back on the year and consider them a
success as I feel better now than I did a year ago. My motivation this year was to work on some base
fundamental parts of me that I had unintentionally neglected - my mind, my emotional state, my inner
self. I guess the preparation for a baby had the cliche&amp;#39;d existential effect.&lt;/p&gt;

&lt;p&gt;Of the behavioral changes I attempted the three that were most beneficial were, first, to see a
therapist semi-regularly. I cannot recommend that, in particular, enough. Find someone you trust and
can establish a healthy rapport with and see them once every other week, or once a month, or as
often as you need. As complicated human beings sometimes the best medicine is to externalize and
talk things out. Clarity has come to me more often than not by the time my 45 minutes is up.&lt;/p&gt;

&lt;p&gt;The second is meditation. My practice is admittedly pretty sporadic and would probably not stand up
to scrutiny of being called &amp;quot;practice&amp;quot;. But of the times I notice that I need the time to stop and
reflect, I spend 15 minutes with some guided meditation, either with &lt;a href=&quot;https://www.headspace.com/&quot;&gt;headspace&lt;/a&gt; app, or my former
company&amp;#39;s app with &lt;a href=&quot;http://abcnews.go.com/Author/Dan_Harris&quot;&gt;Dan Harris&lt;/a&gt; and &lt;a href=&quot;http://www.dharma.org/joseph-goldstein&quot;&gt;Joseph Goldstein&lt;/a&gt;- &lt;a href=&quot;http://www.amazon.com/10-Happier-Self-Help-Actually-Works-A/product-reviews/0062265423&quot;&gt;10% Happier&lt;/a&gt; To call it effective,
for me, would be a vast understatement. If you&amp;#39;re wondering about it and think dipping your toes in
with a bit of a skeptical bent is necessary I would &lt;em&gt;highly&lt;/em&gt; recommend reading Dan&amp;#39;s book of the
same name &lt;em&gt;&amp;quot;&lt;a href=&quot;http://www.amazon.com/10-Happier-Self-Help-Actually-Works-A/product-reviews/0062265423&quot;&gt;10% Happier&lt;/a&gt;&amp;quot;&lt;/em&gt;. It&amp;#39;s easily up there with my other favorite books of 2015.&lt;/p&gt;

&lt;p&gt;Lastly, writing for myself. Writing for the public&amp;mdash;as you can very well see elsewhere in this
site&amp;mdash;isn&amp;#39;t my strongest suit. Writing for myself, to myself, when I need to let some thoughts
out has been therapeutic. I&amp;#39;ve been using an app called &lt;a href=&quot;http://dayoneapp.com&quot;&gt;Day One&lt;/a&gt; on both my laptop and my phone
to keep these thoughts together in one place, synced, and at the tip of my fingers whenever the need
strikes. I&amp;#39;ve been on the train riding home from work, struggling with something or other, and the
time I take to write via stream of consciousness has been wonderful as a means of getting things off
my chest. It&amp;#39;s a more personal form of self therapy. I know no one else will see it (ha - false
security much?) so I can get out whatever is on my mind. I highly recommend providing yourself an
outlet to accomplish this.&lt;/p&gt;

&lt;p&gt;Some of those may help you, some of them may not, most of them may not &amp;ndash; but that&amp;#39;s ok. There
is no perscriptive for life and nothing works for everyone. If you&amp;#39;re reading this and feel
similarly I recommend exploring your options and, above all, be honest with, and kind &lt;em&gt;to&lt;/em&gt;,
yourself.&lt;/p&gt;

&lt;h3 id=&quot;furthermore&quot;&gt;Furthermore&lt;/h3&gt;

&lt;p&gt;The clean slate metaphor applies in a few other facets of my life. I have recently, as of
Thanksgiving, left my job at a small startup and spent most of December working exclusively on a
project I&amp;#39;ve been chipping away at for months. I&amp;#39;m really excited about it and I&amp;#39;ll be writing more
about it here soon. I&amp;#39;ll leave that for its own post, for now. I&amp;#39;m having conversations with friends
and colleagues and looking forward to, most likely, some time contracting and freelancing. If you&amp;#39;re
interested in chatting (please, no full time inquiries) email or tweet at me.&lt;/p&gt;

&lt;p&gt;Happy new year!&lt;/p&gt;

&lt;h3 id=&quot;p-s&quot;&gt;P.S.&lt;/h3&gt;

&lt;p&gt;This year&amp;#39;s favorites.&lt;/p&gt;

&lt;p&gt;Movies: a tie - &lt;em&gt;&lt;a href=&quot;http://www.rottentomatoes.com/m/mad_max_fury_road/&quot;&gt;Mad Max: Fury Road&lt;/a&gt;&lt;/em&gt; &amp;amp;
&lt;em&gt;&lt;a href=&quot;http://www.rottentomatoes.com/m/Sicario&quot;&gt;Sicario&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Book: &lt;em&gt;&lt;a href=&quot;http://www.amazon.com/gp/product/B00J1IQUYM/ref=dp-kindle-redirect?ie=UTF8&amp;amp;btkr=1&quot;&gt;Station Eleven&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Tv: &lt;em&gt;&lt;a href=&quot;http://www.rottentomatoes.com/tv/fargo/&quot;&gt;Fargo&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Music: I have no f&amp;#39;ing clue.&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>Auto-delivering Downloaded Kindle Books</title>
        <link>http://www.joeloliveira.com/2014/03/30/auto-delivering-your-downloaded-kindle-books.html</link>
        <pubDate>Sun, 30 Mar 2014 00:00:00 -0400</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2014/03/30/auto-deliver-your-kindle-books-with-hazel</guid>
        <description>&lt;p&gt;I will often buy self-published programming books and send them to my kindle (and iPad, and iPhone) via email. Amazon&amp;#39;s kindle platform will allow you to distribute documents (books) &lt;a href=&quot;https://www.amazon.com/gp/digital/fiona/manage#manageDevices&quot;&gt;to your devices via custom email addresses&lt;/a&gt;. As mentioned I have three devices that I will often read from and need to send emails to those three with a downloaded mobi attachment. This is far from difficult but annoying enough that it could probably be automated. So I did.&lt;/p&gt;

&lt;p&gt;You will need to allow an email address of yours to send the documents to kindle. &lt;a href=&quot;https://www.amazon.com/gp/digital/fiona/manage#pdocSettings&quot;&gt;Visit your kindle settings page&lt;/a&gt; and approve the email address you will be using (your Gmail address).&lt;/p&gt;

&lt;p&gt;Tools necessary:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Hazel. &lt;a href=&quot;http://www.noodlesoft.com/hazel&quot;&gt;Download and purchase it&lt;/a&gt;. It&amp;#39;s worth it.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://caspian.dotconf.net/menu/Software/SendEmail/&quot;&gt;sendemail&lt;/a&gt;. Install with homebrew - &lt;code&gt;brew install sendemail&lt;/code&gt;. Done!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Open up Hazel&amp;#39;s preferences, select the Downloads directory, and add a new rule:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.evernote.com/shard/s330/sh/ef70b02b-8570-42ff-811c-67a834dc467f/ed1c2e36859bcd7862b36283e0d6dac2/deep/0/Screenshot-3-30-14,-12-58-PM.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;

&lt;p&gt;Where the embedded script looks similar to the command below. Note that the important part here is &lt;code&gt;-a $1&lt;/code&gt; where this interpolates the path to the mobi file and sets it as the attached file.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;sendemail \
 -t your.kindle.email@kindle.com your.other.email@kindle.com \
 -f your.google.username@gmail.com \
 -u &amp;quot;New book&amp;quot; \
 -m &amp;quot;See attached&amp;quot; \
 -a $1 \
 -s smtp.gmail.com:587 \
 -o tls=yes \
 -xu your.google.username \
 -xp your_google_password
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That&amp;#39;s it!&lt;/p&gt;

&lt;p&gt;When you download a mobi file it will (semi-)instantly delivered to your kindle-capable devices. Voilà!&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>Timezones</title>
        <link>http://www.joeloliveira.com/2014/02/17/timezones.html</link>
        <pubDate>Mon, 17 Feb 2014 00:00:00 -0500</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2014/02/17/timezones</guid>
        <description>&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p&gt;Did you know you can tell if someone is a programmer simply by saying the word &amp;quot;timezones&amp;quot; and seeing if they cringe?&lt;/p&gt;&amp;mdash; Michael Rooney (@MikeRooney) &lt;a href=&quot;https://twitter.com/MikeRooney/statuses/428419328162004992&quot;&gt;January 29, 2014&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt; &lt;p&gt;Gah, timezones.&lt;/p&gt;&amp;mdash; micah rich (@micahbrich) &lt;a href=&quot;https://twitter.com/micahbrich/statuses/435459705243058176&quot;&gt;February 17, 2014&lt;/a&gt; &lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
</description>
      </item>
      
    
      
      <item>
        <title>Maintain Style with Rubocop</title>
        <link>http://www.joeloliveira.com/2014/02/06/maintain-style-with-rubocop.html</link>
        <pubDate>Thu, 06 Feb 2014 00:00:00 -0500</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2014/02/06/maintain-style-with-rubocop</guid>
        <description>&lt;p&gt;Have you heard of this &lt;a href=&quot;https://github.com/bbatsov/rubocop&quot;&gt;Rubocop&lt;/a&gt; yet? It&amp;#39;s a static code analysis tool that enforces many of the guidelines outlined in the community &lt;a href=&quot;https://github.com/bbatsov/ruby-style-guide&quot;&gt;Ruby Style Guide&lt;/a&gt;. Despite my initial hesitance &amp;mdash; it felt a little &amp;quot;&lt;a href=&quot;http://www.therailsway.com/2007/8/1/dangers-of-cargo-culting/&quot;&gt;cargo-cult&amp;#39;y&lt;/a&gt;&amp;quot; &amp;mdash; there are several reasons why I consider something like Rubocop valuable and fantastic.&lt;/p&gt;

&lt;p&gt;As a development team grows the importance of keeping everyone moving in the same direction increases. The time spent discussing and commenting on pull-requests over innocuous details like trailing whitespace, tabs vs spaces, single vs double quotes, single line &lt;code&gt;{}&lt;/code&gt; vs multi-line &lt;code&gt;do; end;&lt;/code&gt; blocks. Over time it adds up. Why waste time when it can be automated?&lt;/p&gt;

&lt;p&gt;It effectively helps remove a bit of human emotion from the code review process - the possibility that someone could misconstrue a litany of style-related comments in a pull-request as being personal. When someone gets hits with a few dozen &amp;quot;white-space&amp;quot; or &amp;quot;single quotes&amp;quot; comments in a PR, said person might consider it an exercise in nit-picking.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;quot;This asshole is having a blast nit-picking my code&amp;quot;&lt;/em&gt; &lt;sup&gt;1&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This happens. Like it or not. We&amp;#39;re human. We have feelings, however irrational they may be. Offloading this responsibility to a machine effectively takes this off the table. Nothing personal, right?&lt;/p&gt;

&lt;p&gt;Last but certainly not least, even though I&amp;#39;ve been working with ruby for a long while, there are the occasional tidbits of style or best-practice that have fallen through the cracks - I had just not seen them. In going through the process of adjusting my own code these are bubbled up to the surface.&lt;/p&gt;

&lt;h2 id=&quot;now-for-something-practical&quot;&gt;Now for something practical&lt;/h2&gt;

&lt;p&gt;Having said that - here are a few tips on getting Rubocop into your codebase today! &lt;sup&gt;2&lt;/sup&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a full Rubocop config with all of the &amp;quot;cops&amp;quot; set to false. Turn them on one by one and clean things up offense by offense. Running everything all at once may be overwhelming. Open up that YAML and start turning things on incrementally.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;rubocop --auto-gen-config &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; mv rubocop-todo.yml .rubocop.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Leverage your editor. There are plugins or extensions &lt;a href=&quot;https://github.com/bbatsov/rubocop#editor-integration&quot;&gt;for a number of editors at the project&amp;#39;s repo&lt;/a&gt;. I prefer a little more granular controller and added my own leader shortcuts.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;c&quot;&gt;&amp;quot; run rubocop through the entire project in my tmux window and pane of choice&lt;/span&gt;
map &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;leader&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;bc :&lt;span class=&quot;k&quot;&gt;call&lt;/span&gt; Send_to_Tmux&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;rubocop\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&amp;lt;&lt;/span&gt;CR&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; 

&lt;span class=&quot;c&quot;&gt;&amp;quot; run rubocop on the current file in my tmux window and pane of choice&lt;/span&gt;
map &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;leader&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;bo&lt;/span&gt; :&lt;span class=&quot;k&quot;&gt;call&lt;/span&gt; Send_to_Tmux&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;rubocop &amp;quot;&lt;/span&gt;. expand&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;%:p&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; .&lt;span class=&quot;s2&quot;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&amp;lt;&lt;/span&gt;CR&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;After your codebase is in a clean state, pull it in with your other default rake tasks. After adding and bundling &lt;code&gt;rubocop&lt;/code&gt; to your project, a hypothetical &lt;code&gt;Rakefile&lt;/code&gt; with rspec and Rubocop as the default tasks could look like: &lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expand_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;../config/application&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;__FILE__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;MyApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load_tasks&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%w(development test)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;include?&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;rubocop/rake_task&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;RuboCop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RakeTask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clear&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:rubocop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;At this point you wouldn&amp;#39;t have to think about running rubocop as it acts as a part of your test suite.&lt;/p&gt;

&lt;p&gt;Last thought - it speaks volumes when a language adopts this idea as a core part of its feature-set. Just &lt;a href=&quot;http://blog.golang.org/go-fmt-your-code&quot;&gt;look at Go&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;So what are you waiting for? Try it out and &lt;a href=&quot;https://twitter.com/jayroh&quot;&gt;let me know what you think&lt;/a&gt;!&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;sup&gt;1&lt;/sup&gt; A worthwhile read regarding this - &lt;a href=&quot;http://sstephenson.us/posts/you-are-not-your-code&quot;&gt;you are not your code&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;2&lt;/sup&gt; It may be a good idea to start by create a feature branch tackling &lt;em&gt;just&lt;/em&gt; the task of cleaning up a single section of a codebase. Start with one bucket - like your models for example.&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>Taking a Break</title>
        <link>http://www.joeloliveira.com/2013/11/04/taking-a-break/index.html</link>
        <pubDate>Mon, 04 Nov 2013 00:00:00 -0500</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2013/11/04/taking-a-break/taking-a-break</guid>
        <description>&lt;p&gt;There are, I&amp;#39;m sure, people wondering why on earth I would leave a job like
the one I&amp;#39;ve had for 18 months at thoughtbot. For a little while I thought the
same thing.&lt;/p&gt;

&lt;p&gt;Smart people around me every day.
Good salary.
Security.
Opportunities around every corner.
Perks to being a &amp;quot;thoughtbotter&amp;quot; (there are plenty).&lt;/p&gt;

&lt;p&gt;Those barely scratch the surface as there are more. I&amp;#39;m going to miss working
there -- a &lt;em&gt;lot&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;But why leave? The answer is the most logical and straightfoward - the right
opportunity came along to work with a smart and ambitious group of people
that will allow me the privilege of making a huge contribution to a product I
want to not only see built, but I want to use.&lt;/p&gt;

&lt;p&gt;For the first time in 14 years I won&amp;#39;t be in the services business, which will
be strange for sure. I&amp;#39;ve been working with clients so long and had gotten to
the point where I was really starting to &lt;em&gt;get it&lt;/em&gt; and hone that part of my
craft. The fact that it had taken me so long to consciously and actively wrap
my head around that part could be argued as a &amp;quot;smell&amp;quot;.&lt;/p&gt;

&lt;p&gt;&amp;quot;Why did it take you so long?&amp;quot;&lt;/p&gt;

&lt;p&gt;It&amp;#39;s a great question. I hope to dig into my brain and tease out the reasons
why soon. I have some thoughts on the matter.&lt;/p&gt;

&lt;p&gt;The next 4-8 weeks will be spent taking the opportunity to play
dendrochronologist and examine the rings in the cross-section of my career, and
my adult life. What are the motivations and behavior that have gotten me here?&lt;/p&gt;

&lt;p&gt;We&amp;#39;ll see! Perhaps together.&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>Rails engines won't reload per request in dev</title>
        <link>http://www.joeloliveira.com/2013/06/05/rails-engines-wont-reload-per-request-in-dev/index.html</link>
        <pubDate>Wed, 05 Jun 2013 00:00:00 -0400</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2013/06/05/rails-engines-wont-reload-per-request-in-dev/rails-engines-wont-reload-per-request-in-dev</guid>
        <description>&lt;p&gt;When working on a rails engine or plugin you might notice that, when running your dummy/test app in development mode, it will not reload any changes to your engine. If this is bothering you, then the solution is to add &lt;code&gt;config.reload_plugins = true&lt;/code&gt; to your &lt;code&gt;spec/dummy/config/environments/development.rb&lt;/code&gt; file. Restart your server and you should be able to reload your browser and see your changes take effect.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s a small little thing but frustrating enough that you &lt;em&gt;might&lt;/em&gt; think everything&amp;#39;s busted.&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>Goodbye Wordpress</title>
        <link>http://www.joeloliveira.com/2013/05/26/goodbye-wordpress-hello-jekyll/index.html</link>
        <pubDate>Sun, 26 May 2013 00:00:00 -0400</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2013/05/26/goodbye-wordpress-hello-jekyll/goodbye-wordpress-hello-jekyll</guid>
        <description>&lt;p&gt;Hello &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m behind the curve and finally moved my old neglected website to a new &lt;span title=&quot;hopefully not?&quot;&gt;&lt;del&gt;neglected&lt;/del&gt;&lt;/span&gt; website. This has, for a long while, been on my list of things to get to. The reasons why are too many to count, but at the core the wordpress experience is a terrible chore. Jekyll, once it&amp;#39;s all set up and ready to go, moves into the background. It&amp;#39;s an afterthought. I can now concentrate on writing - not updating it every few weeks, not learning a new UI every several point releases, not worrying about security vulnerabilities, and a complete lack of a WYSIWYG editor. Free at last!&lt;/p&gt;

&lt;p&gt;This is the first time I&amp;#39;ve published a site with Jekyll so here are a few tips and resources I picked up:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/benbalter/wordpress-to-jekyll-exporter&quot;&gt;Ben Balter&amp;#39;s wordpress to Jekyll exporter plugin&lt;/a&gt;. I couldn&amp;#39;t (wouldn&amp;#39;t) have been able to move over the last several years&amp;#39; worth of embarrassing drivel to this without it.&lt;/li&gt;
&lt;li&gt;The posts exported from that plugin are saved with permalinks &lt;em&gt;not&lt;/em&gt; containing the trailing index.html. Jekyll will complain if that path doesn&amp;#39;t contain a file. The following will run through the posts with sed and tack on the &lt;code&gt;index.html&lt;/code&gt; to the end of your permalink:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;    find . -name \*.md -exec \
      sed -i &amp;quot;&amp;quot; &amp;#39;/permalink/s|$|index.html|&amp;#39; {} \;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;As advertised, the &lt;a href=&quot;https://github.com/laurilehmijoki/jekyll-s3&quot;&gt;jekyll-s3 gem&lt;/a&gt; just works. It took me all of a minute to get things set up and my files uploaded to S3.&lt;/li&gt;
&lt;li&gt;One bump I ran into had to do with using Amazon&amp;#39;s cloudfront CDN in front of S3. The root url for my domain, without &lt;code&gt;index.html&lt;/code&gt;, displayed some sort of permission error. If I went directly to the cloudfront address it worked fine. After plenty of googling I gave up. S3 alone is fine enough for me right now.&lt;/li&gt;
&lt;li&gt;S3 is one of a few hosting options that don&amp;#39;t make hosting your site with a naked domain possible. To get around this use the free naked domain redirect from &lt;a href=&quot;http://wwwizer.com/naked-domain-redirect&quot;&gt;WWWizer&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If you&amp;#39;re using GitHub pages then using &lt;a href=&quot;http://prose.io&quot;&gt;prose.io&lt;/a&gt; is a no-brainer. It hooks into github seamlessly and allows you to publish directly from the app. If all blogging platforms had UX half as good, the internet would be a better place. Excellent work. (Hat-tip to &lt;a href=&quot;https://twitter.com/kylefiedler&quot;&gt;Kyle Fiedler&lt;/a&gt; for introducing me to prose.io)&lt;/li&gt;
&lt;li&gt;If you like editing markdown locally then check out &lt;a href=&quot;http://mouapp.com/&quot;&gt;Mou&lt;/a&gt;. It&amp;#39;s my editor of choice. On the iPad I&amp;#39;ve enjoyed &lt;a href=&quot;http://bywordapp.com/&quot;&gt;Byword&lt;/a&gt;, thanks to its integration with Dropbox.&lt;/li&gt;
&lt;li&gt;Heard from &lt;a href=&quot;https://twitter.com/pjvds&quot;&gt;Pieter Joost&lt;/a&gt; on twitter letting me know about &lt;a href=&quot;http://born2code.net/blog/2013/05/27/simplify-your-jekyll-publishing-process-with-wercker/&quot;&gt;wercker&lt;/a&gt;. Werker is &lt;em&gt;a content continuous delivery platform in the cloud. You can leverage its power to do the content generation and deployment process for you&lt;/em&gt;. Check it out if you&amp;#39;re in need!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finally, I must give credit where credit is due. If it weren&amp;#39;t for my friend &lt;a href=&quot;https://twitter.com/dperrera&quot;&gt;Dan Pererra&lt;/a&gt;&amp;#39;s willingness to let me lift the markup and style from his own website, &lt;a href=&quot;http://perrera.com/blog&quot;&gt;perrera.com/blog&lt;/a&gt;, then I don&amp;#39;t think I would have made this move. It&amp;#39;s clean, responsive and, like Jekyll, it puts the content up front and center. Check out Dan&amp;#39;s, and all his wonderful business partners&amp;#39;, work at &lt;a href=&quot;http://fromtheoutfit.com/&quot;&gt;the Outfit&lt;/a&gt;. They&amp;#39;re all fantastic people (and great to raise a glass with). Thank you, Dan!&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>Woops!</title>
        <link>http://www.joeloliveira.com/2012/10/19/woops/index.html</link>
        <pubDate>Fri, 19 Oct 2012 00:00:00 -0400</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2012/10/19/woops/woops</guid>
        <description>&lt;p&gt;Site’s been down for a while – sorry about that everyone!&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>RIP Steve Jobs, the Icon</title>
        <link>http://www.joeloliveira.com/2011/10/06/rip-steve-jobs/index.html</link>
        <pubDate>Thu, 06 Oct 2011 00:00:00 -0400</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2011/10/06/rip-steve-jobs/rip-steve-jobs</guid>
        <description>&lt;p&gt;I started writing this over at Hacker News and figured I would re-post it here.&lt;/p&gt;

&lt;p&gt;I, just now, walked into my home office after a trip to my doctor for a check-up … a check-up I’d been putting off for 2 years or so. The timing is impeccable with what happened yesterday in Mr. Jobs’ passing. Health and my personal well-being have never been more important to me than it is now. I have lost a little over 50 pounds in the last 6 months because, well, I couldn’t ignore my health problems any longer. It got to be increasingly important that I pay attention.&lt;/p&gt;

&lt;p&gt;Other than the weight, what else have I lost? My sister, Anna. She was 36 years old. Anna died from a pulmonary embolism while she was getting ready to go to work as an ICU nurse. Ironically, she was a nurse who rarely (if ever) saw a doctor and ended up passing away because she didn’t know she was prone to easy blood clotting. I miss her tremendously, as a human being and a true beautiful spirit, more than I can write here. She was way way greater than the sum of her parts.&lt;/p&gt;

&lt;p&gt;If that type of profound loss is not a wake up call, I don’t know what is.&lt;/p&gt;

&lt;p&gt;Why will I miss Steve Jobs, the icon — a man that I’ve never met? Not the iphones and macbooks and ipads that I’ve bought and enjoyed immensely – but &lt;a href=&quot;http://www.youtube.com/watch?v=D1R-jKKp3NA&quot;&gt;the lesson that tomorrow is no sure thing and to live today as if it’s not&lt;/a&gt;. This particular lesson is what I’ll always remember about this man. He helped us get all of this wonderful STUFF, purchased with money, but the journey that got Apple there is entirely without a price tag. So no, I won’t miss Steve Jobs, “the man” like I’ll miss Anna. I will remember his legacy for what it provided me – the reminder to always stay foolish, always stay hungry.&lt;/p&gt;

&lt;p&gt;While reflecting on things related to loss I’ve learned how important it is to hug your family members – tell them how much you love them. Next, tell them to literally take care of themselves – both physically and spiritually. You and I want them around, and happy, for as long as possible.&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>The ampersand &#038; a killer Sass feature</title>
        <link>http://www.joeloliveira.com/2011/06/28/the-ampersand-a-killer-sass-feature/index.html</link>
        <pubDate>Tue, 28 Jun 2011 00:00:00 -0400</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2011/06/28/the-ampersand-a-killer-sass-feature/the-ampersand-a-killer-sass-feature</guid>
        <description>&lt;p&gt;Earlier tonight &lt;a href=&quot;http://twitter.com/adamstac&quot;&gt;Adam Stacoviak&lt;/a&gt; posted &lt;a href=&quot;http://adamstacoviak.com/posts/referencing-parent-selectors/&quot;&gt;something on his blog&lt;/a&gt; about the killer feature that is the ampersand in the Sass CSS meta-language. Go read it immediately. Go. I’ll wait here.&lt;/p&gt;

&lt;p&gt;So – to boil this down … the &lt;em&gt;“&amp;amp;”&lt;/em&gt; tells sass to pull the entire parent selector into where you place this beautiful little ampersand. The perfect use case that allowed me to dip my toes into this was with something like psuedo selectors for anchor tags. Example: &lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/1052807.js?file=ampersand-to-start.css&quot;&gt;&lt;/script&gt;

&lt;p&gt;Simple enough, right? Pretty awesome. As Adam noted in his blog post though, the &lt;em&gt;&amp;amp;&lt;/em&gt; doesn’t belong solely at the beginning of your nested selector – you can tack it on at the end of that nested selector for further customization. Let’s say the example I have above needs a special edge-case for a particular page, or page state — like what if I’m logged in as an admin? Maybe our page(s) have a new “admin” class added to our body tag? We could go the route of adding something after our scss block specifying this edge case.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/1052807.js?file=ampersand-can-go-wherever-pt1.css&quot;&gt;&lt;/script&gt;

&lt;p&gt;But why? Why bump this down below as almost an afterthought? Shouldn’t we have that grouped inside within the context of the anchor tag? We can do that with the magical ampersand:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/1052807.js?file=ampersand-can-go-anywhere-pt2.css&quot;&gt;&lt;/script&gt;

&lt;p&gt;Pay attention to where that ampersand is. “Pre-pend this &lt;em&gt;body.admin&lt;/em&gt; right before &lt;strong&gt;all&lt;/strong&gt; of the parent selectors in this nested group”.&lt;/p&gt;

&lt;p&gt;Now. Here’s where I hope to stress just how money this is. Because it is.&lt;/p&gt;

&lt;p&gt;Have you used &lt;a href=&quot;http://www.modernizr.com/&quot;&gt;Modernizr&lt;/a&gt;? What about the &lt;a href=&quot;http://code.google.com/apis/webfonts/docs/webfont_loader.html&quot;&gt;google web-font loader&lt;/a&gt;? At the very least you’ve used &lt;a href=&quot;http://paulirish.com/2008/conditional-stylesheets-vs-css-hacks-answer-neither/&quot;&gt;the trick from HTML5 Boilerplate to target versions of IE with some well-placed conditional comments&lt;/a&gt;? What do all of these have in common? They all dynamically, in one form or another, add classes to the root html class. In Modernizr’s case it tells you what features you can hook into within your CSS. In Google’s web-font loader it will update some classes in  to tell us if and when our typefaces &lt;em&gt;are loading&lt;/em&gt; or &lt;em&gt;have loaded&lt;/em&gt;. This is where that ampersand has made things easier for me. 
A perfect real world example to consider is when I was working on starting to integrate &lt;a href=&quot;http://www.fontsquirrel.com/fonts/Quicksand&quot;&gt;Quicksand&lt;/a&gt;, a free font from FontSquirrel, with Google’s Web-font loader, into the very much in-progress &lt;a href=&quot;http://www.designsponge.com/&quot;&gt;Design*Sponge&lt;/a&gt; redesign. I fell into a trap where I ended up tacking selectors onto a tragically long list for two states of the font – NOT loaded, and loaded. Not familiar? Let me explain. &lt;/p&gt;

&lt;p&gt;The element that needed styling to use Quicksand was always set to &lt;em&gt;visibility: hidden&lt;/em&gt;. Once the font(s) finished loading the html would end up with the .wf-active class, allowing us to then show the font(s) with &lt;em&gt;visibility: visible&lt;/em&gt;. This is all to combat &lt;a href=&quot;http://paulirish.com/2009/fighting-the-font-face-fout/&quot;&gt;FOUT (“flash of unstyled text”)&lt;/a&gt;. The tragedy was how I chose to tackle this at first – I had that previously mentioned LONG list of selectors, comma separated, that kept getting new elements whenever a new piece of text needed “QuicksandLight”. Poor decision. That CSS got unruly and terribly difficult to manage. I had sass partials containing beautifully compartmentalized and scoped selectors …&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://s3.amazonaws.com/kym-assets/entries/icons/original/000/005/627/untitled.JPG&quot; alt=&quot;no, it&amp;#39;s not okay&quot; title=&quot;not ok&quot;&gt; &lt;/p&gt;

&lt;p&gt;… and then this giant blob of garbage saying “these are hidden” … “until they get .wf-active” in the html tag. &lt;/p&gt;

&lt;p&gt;Not ok. This needed to be dealt with. These edge-cases needed to show up right after the “normal” base selectors, not in a disparate location somewhere else in the CSS. I determined that the best solution would be to wrap these fonts and the associated states in mixins that could be used across our scss files. Here’s what I came up with: &lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/1052807.js?file=quicksand-mixin.css&quot;&gt;&lt;/script&gt;

&lt;p&gt;At first glance it doesn’t look like such a big deal, but when you consider there are hundreds of elements on the site getting this font-face applied to it, it ends up turning into a chore mostly consisting of a &lt;strong&gt;lot&lt;/strong&gt; of copy and paste. Really study that gist – when that clicked, it was magic. &lt;/p&gt;

&lt;p&gt;As a bonus, consider this – originally I didn’t realize I needed to target IE as I did in the final resulting mixin. The site launched without &lt;em&gt;.msie.wf-loading&lt;/em&gt; and &lt;em&gt;.msie.wf-inactive&lt;/em&gt; in there. Without that treatment the fonts were not showing up in IE7 and IE8. Terrible. After a little research I ended up adding those two into the mixin and all was good in the world. No global search. No copy and paste needed. Run into that problem without using something like Sass, just plain vanilla css, and tell me you’re not annoyed. I promise you – you’re annoyed.&lt;/p&gt;

&lt;p&gt;That’s but one example using the Google font-loader. Using this in conjunction with the conditionally set IE-related classes, or a CSS3 feature like “borderimage” (which I used the hell out of for Design*Sponge), has been a god-send. Keeping everything tidy inside the scope of our nested selectors keeps things manageable and easy to find. There’s no need to go searching for similar selectors across your CSS file – because it’s right &lt;em&gt;there&lt;/em&gt;, &lt;em&gt;right next&lt;/em&gt; to your normal, base selector.&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>Slides available for Railsconf 2011</title>
        <link>http://www.joeloliveira.com/2011/05/18/slides-available-for-railsconf-2011/index.html</link>
        <pubDate>Wed, 18 May 2011 00:00:00 -0400</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2011/05/18/slides-available-for-railsconf-2011/slides-available-for-railsconf-2011</guid>
        <description>&lt;p&gt;Take a look fast because I’m sure some (not all) of these won’t last long. More are on the way as I comb through the twitter stream of speakers providing links.&lt;/p&gt;

&lt;p&gt;Zach Holman – Double-Shipping Software for Profit – &lt;a href=&quot;http://zachholman.com/talk/2011/railsconf&quot;&gt;http://zachholman.com/talk/2011/railsconf&lt;/a&gt;
Jeff Casimir – Fat Models Aren’t Enough – &lt;a href=&quot;http://dl.dropbox.com/u/69001/Fat&quot;&gt;http://dl.dropbox.com/u/69001/Fat&lt;/a&gt; Models Aren&amp;#39;t Enough - RailsConf.pdf
Matt Parker – Readme Driven Development – &lt;a href=&quot;http://www.slideshare.net/moonmaster9000/readme-driven-development&quot;&gt;http://www.slideshare.net/moonmaster9000/readme-driven-development&lt;/a&gt;
John Nunemaker – Why You Should Never Use an ORM – &lt;a href=&quot;http://speakerdeck.com/u/jnunemaker/p/why-you-should-never-use-an-orm&quot;&gt;http://speakerdeck.com/u/jnunemaker/p/why-you-should-never-use-an-orm&lt;/a&gt;
John Athayde and Bruce Williams – Building Bulletproof Views – &lt;a href=&quot;http://assets.en.oreilly.com/1/event/59/Building&quot;&gt;http://assets.en.oreilly.com/1/event/59/Building&lt;/a&gt; Bulletproof Views Presentation.pdf
Derek Collison – Cloud Foundry – The Rails Developer’s Perspective – &lt;a href=&quot;http://assets.en.oreilly.com/1/event/59/Cloud&quot;&gt;http://assets.en.oreilly.com/1/event/59/Cloud&lt;/a&gt; Foundry – The Rails Developer’s Perspective Presentation.pdf
Nick Gauthier – KnowSQL: Database Tricks To Make Your Life Easier – &lt;a href=&quot;http://knowsql.heroku.com/&quot;&gt;http://knowsql.heroku.com/&lt;/a&gt;
Clinton R. Nixon – Upgrading Legacy Rails Applications to Rails 3 – &lt;a href=&quot;http://assets.en.oreilly.com/1/event/59/Upgrading&quot;&gt;http://assets.en.oreilly.com/1/event/59/Upgrading&lt;/a&gt; Legacy Rails Applications to Rails 3 Presentation.pdf
Mikel Lindsaar – Keeping Rails on the Tracks – &lt;a href=&quot;http://www.slideshare.net/raasdnil/keeping-rails-on-the-tracks&quot;&gt;http://www.slideshare.net/raasdnil/keeping-rails-on-the-tracks&lt;/a&gt;
Adam Keys – Mixing a Persistence Cocktail – &lt;a href=&quot;http://speakerdeck.com/u/therealadam/p/mixing-a-persistence-cocktail-1&quot;&gt;http://speakerdeck.com/u/therealadam/p/mixing-a-persistence-cocktail-1&lt;/a&gt;
Hiro Asari – 20 Productivity Tips
pdf &lt;a href=&quot;http://dl.dropbox.com/u/1788208/ProductivityTips.pdf&quot;&gt;http://dl.dropbox.com/u/1788208/ProductivityTips.pdf&lt;/a&gt;
keynote &lt;a href=&quot;http://bit.ly/mqlGxi&quot;&gt;http://bit.ly/mqlGxi&lt;/a&gt;
Matteo Latini – Building Bulletproof Views – &lt;a href=&quot;http://therailsview.com/building-bulletproof-views-rc2011.pdf&quot;&gt;http://therailsview.com/building-bulletproof-views-rc2011.pdf&lt;/a&gt;
Bryan Liles – Active Support – &lt;a href=&quot;http://smartic.us/doodads/presentations/railsconf2011/#1&quot;&gt;http://smartic.us/doodads/presentations/railsconf2011/#1&lt;/a&gt;&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>Slides available from Railsconf 2011</title>
        <link>http://www.joeloliveira.com/2011/05/17/slides-available-from-railsconf-2011/index.html</link>
        <pubDate>Tue, 17 May 2011 00:00:00 -0400</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2011/05/17/slides-available-from-railsconf-2011/slides-available-from-railsconf-2011</guid>
        <description>&lt;p&gt;Get a look fast – I have a feeling some of these might not exist at these URL’s for all that long (especially the PDF’s)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href=&quot;http://zachholman.com/talk/2011/railsconf&quot;&gt;Zach Holman – Double-Shipping Software for Profit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  [Jeff Casimir – Fat Models Aren’t Enough][2]&lt;/li&gt;
&lt;li&gt;  &lt;a href=&quot;http://www.slideshare.net/moonmaster9000/readme-driven-development&quot;&gt;Matt Parker – Readme Driven Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  &lt;a href=&quot;http://speakerdeck.com/u/jnunemaker/p/why-you-should-never-use-an-orm&quot;&gt;John Nunemaker – Why You Should Never Use an ORM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  [John Athayde and Bruce Williams – Building Bulletproof Views][5]&lt;/li&gt;
&lt;li&gt;  [Derek Collison – Cloud Foundry – The Rails Developer’s Perspective][6]&lt;/li&gt;
&lt;li&gt;  &lt;a href=&quot;http://knowsql.heroku.com/&quot;&gt;Nick Gauthier – KnowSQL: Database Tricks To Make Your Life Easier&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  [Clinton R. Nixon – Upgrading Legacy Rails Applications to Rails 3][8]&lt;/li&gt;
&lt;li&gt;  &lt;a href=&quot;http://www.slideshare.net/raasdnil/keeping-rails-on-the-tracks&quot;&gt;Mikel Lindsaar – Keeping Rails on the Tracks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  &lt;a href=&quot;http://speakerdeck.com/u/therealadam/p/mixing-a-persistence-cocktail-1&quot;&gt;Adam Keys – Mixing a Persistence Cocktail&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  &lt;a href=&quot;http://dl.dropbox.com/u/1788208/ProductivityTips.pdf&quot;&gt;Hiro Asari – 20 Productivity Tips (pdf)&lt;/a&gt; &lt;a href=&quot;http://bit.ly/mqlGxi&quot;&gt;(and keynote)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  &lt;a href=&quot;http://smartic.us/doodads/presentations/railsconf2011/#1&quot;&gt;Bryan Liles – Active Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;  &lt;a href=&quot;https://github.com/coderoshi/holy-grail-dbs&quot;&gt;Eric Redmond – The Holy Grail of Databases&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;[2]: &lt;a href=&quot;http://dl.dropbox.com/u/69001/Fat&quot;&gt;http://dl.dropbox.com/u/69001/Fat&lt;/a&gt; Models Aren&amp;#39;t Enough - RailsConf.pdf&lt;/p&gt;

&lt;p&gt;[5]: &lt;a href=&quot;http://assets.en.oreilly.com/1/event/59/Building&quot;&gt;http://assets.en.oreilly.com/1/event/59/Building&lt;/a&gt; Bulletproof Views Presentation.pdf
 [6]: &lt;a href=&quot;http://assets.en.oreilly.com/1/event/59/Cloud&quot;&gt;http://assets.en.oreilly.com/1/event/59/Cloud&lt;/a&gt; Foundry – The Rails Developer’s Perspective Presentation.pdf&lt;/p&gt;

&lt;p&gt;[8]: &lt;a href=&quot;http://assets.en.oreilly.com/1/event/59/Upgrading&quot;&gt;http://assets.en.oreilly.com/1/event/59/Upgrading&lt;/a&gt; Legacy Rails Applications to Rails 3 Presentation.pdf&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>Visualizing the difference between references_many and embeds_many in mongoid.</title>
        <link>http://www.joeloliveira.com/2010/10/23/visualizing-the-difference-between-references_many-and-embeds_many-in-mongoid/index.html</link>
        <pubDate>Sat, 23 Oct 2010 00:00:00 -0400</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2010/10/23/visualizing-the-difference-between-references_many-and-embeds_many-in-mongoid/visualizing-the-difference-between-references_many-and-embeds_many-in-mongoid</guid>
        <description>&lt;p&gt;&lt;em&gt;This one gave me fits for a little bit not too long ago, &lt;a href=&quot;http://groups.google.com/group/mongoid/browse_thread/thread/6e21edf44293f12&quot;&gt;and crept up on the mongoid list the other day&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;One of the greatest things about mongo in what it does is the idea of embedding documents into other documents – at times removing the need for relations where it makes sense. The classic example being Blog posts and comments within that post. Why not just shove the comments directly inside of the blog posts’ documents? It’s faster and makes sense – these are just documents right? So let’s treat them as such.&lt;/p&gt;

&lt;p&gt;But on occasion the need for relations remains. On a toy app I’ve begun rewriting to use Rails3 and Mongo (Mongoid, specifically) I ran into a conceptual road-block that I’ve seen creep up on occasion between the other (relative) newbies like myself – how the relations are stored between Mongoid objects. I needed a relational association instead of just embedding (why? the size limit for collections probably would have bitten me in the ass in the future). But after following the conventions in the documentation and inspecting how things ended up in the database I realized I had a few things twisted. &lt;/p&gt;

&lt;p&gt;I think part of it, at least for me, is the &lt;strong&gt;idea&lt;/strong&gt; of embedding gets in the way of how you perceive this getting stored within the mongo document(s). Take &lt;a href=&quot;http://mongoid.org/docs/associations/&quot;&gt;the example at the mongoid documentation&lt;/a&gt; under “Relational Associations” &lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;class Person
  include Mongoid::Document
  references_many :prescriptions
end
class Prescription
  include Mongoid::Document
  referenced_in :person
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When I look at that – I think that the &lt;em&gt;Person&lt;/em&gt; would collect the references to &lt;em&gt;Prescription&lt;/em&gt;, perhaps in a :prescriptions array. Such is not the case. Instead the Prescription objects contain a single reference to its “parent” object – Person. Below is a comparison of what you might think, versus how it’s actually stored in the database&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;john = Person.create
prescription = Prescription.create
john.prescriptions 
# {
#   &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;4cc2f0bac0b37e9c17000001&amp;quot;),
#   &amp;quot;_type&amp;quot; : &amp;quot;Person&amp;quot;,
#   &amp;quot;prescriptions&amp;quot; : [ ObjectId(&amp;quot;4cc2f0bac0b37e9c17000002&amp;quot;) ]
#   &amp;quot;created_at&amp;quot; : &amp;quot;Sat Oct 23 2010 10:27:06 GMT-0400 (EDT)&amp;quot;
# }
# prescription =&amp;gt;
# {
#   &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;4cc2f0bac0b37e9c17000002&amp;quot;),
#   &amp;quot;_type&amp;quot; : &amp;quot;Prescription&amp;quot;,
#   &amp;quot;created_at&amp;quot; : &amp;quot;Sat Oct 23 2010 10:27:06 GMT-0400 (EDT)&amp;quot;
# }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Versus what this is actually doing&lt;br&gt;
```&lt;/p&gt;

&lt;h1 id=&quot;john-gt&quot;&gt;john =&amp;gt;&lt;/h1&gt;

&lt;h1 id=&quot;&gt;{&lt;/h1&gt;

&lt;h1 id=&quot;quot-_id-quot-objectid-quot-4cc2f0bac0b37e9c17000001-quot&quot;&gt;&amp;quot;_id&amp;quot; : ObjectId(&amp;quot;4cc2f0bac0b37e9c17000001&amp;quot;),&lt;/h1&gt;

&lt;h1 id=&quot;quot-_type-quot-quot-person-quot&quot;&gt;&amp;quot;_type&amp;quot; : &amp;quot;Person&amp;quot;,&lt;/h1&gt;

&lt;h1 id=&quot;quot-created_at-quot-quot-sat-oct-23-2010-10-27-06-gmt-0400-edt-quot&quot;&gt;&amp;quot;created_at&amp;quot; : &amp;quot;Sat Oct 23 2010 10:27:06 GMT-0400 (EDT)&amp;quot;&lt;/h1&gt;

&lt;h1 id=&quot;&gt;}&lt;/h1&gt;

&lt;h1 id=&quot;prescription-gt&quot;&gt;prescription =&amp;gt;&lt;/h1&gt;

&lt;h1 id=&quot;&gt;{&lt;/h1&gt;

&lt;h1 id=&quot;quot-_id-quot-objectid-quot-4cc2f0bac0b37e9c17000002-quot&quot;&gt;&amp;quot;_id&amp;quot; : ObjectId(&amp;quot;4cc2f0bac0b37e9c17000002&amp;quot;),&lt;/h1&gt;

&lt;h1 id=&quot;quot-_type-quot-quot-prescription-quot&quot;&gt;&amp;quot;_type&amp;quot; : &amp;quot;Prescription&amp;quot;,&lt;/h1&gt;

&lt;h1 id=&quot;quot-created_at-quot-quot-sat-oct-23-2010-10-27-06-gmt-0400-edt-quot&quot;&gt;&amp;quot;created_at&amp;quot; : &amp;quot;Sat Oct 23 2010 10:27:06 GMT-0400 (EDT)&amp;quot;,&lt;/h1&gt;

&lt;h1 id=&quot;quot-person_id-quot-objectid-quot-4cc2f0bac0b37e9c17000001-quot&quot;&gt;&amp;quot;person_id&amp;quot; : ObjectId(&amp;quot;4cc2f0bac0b37e9c17000001&amp;quot;)&lt;/h1&gt;

&lt;h1 id=&quot;&gt;}&lt;/h1&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;I realize this follows the same old ActiveRecord conventions of the parent ID being stored in the children objects, but when you develop that big ole’ crush on, and get married to, the idea of mongo’s embedded documents – it’s difficult to switch gears!

*If any information is misrepresented or factually incorrect please leave a comment and let me know!*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      </item>
      
    
      
      <item>
        <title>Rack::Tidy and Devise in the Rack Middleware Stack</title>
        <link>http://www.joeloliveira.com/2010/09/25/racktidy-and-devise-in-the-rack-middleware-stack/index.html</link>
        <pubDate>Sat, 25 Sep 2010 00:00:00 -0400</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2010/09/25/racktidy-and-devise-in-the-rack-middleware-stack/racktidy-and-devise-in-the-rack-middleware-stack</guid>
        <description>&lt;p&gt;After quite a bit of digging around, and a little help from mr. &lt;a href=&quot;http://github.com/josevalim&quot;&gt;Jose Valim&lt;/a&gt; at &lt;a href=&quot;http://plataformatec.com.br/&quot;&gt;Plataformatec&lt;/a&gt;, I realized that the combination of the &lt;a href=&quot;http://github.com/plataformatec/devise&quot;&gt;Devise&lt;/a&gt; authentication gem, along with &lt;a href=&quot;http://github.com/webficient/rack-tidy&quot;&gt;Rack-Tidy&lt;/a&gt;, aren’t quite so friendly with each other. The main culprit here, I would say is the Tidy gem. Why? Because the essence of its existence is to re-arrange the markup handed back from the app-server. So some things get lost in the shuffle during all that house-cleaning (please, correct me if I’m wrong).&lt;/p&gt;

&lt;p&gt;I had a hunch that with a little musical chairs in the middleware stack, we could find a solution that would allow all pieces to live harmoniously. Luckily, I was right. The trick is to make sure Tidy is inserted into the stack before ActionDispatch::Flash (&lt;em&gt;because Rack::Tidy was killing the flash messages returned from Devise/Warden&lt;/em&gt;) and before Warden::Manager (&lt;em&gt;the rack authentication layer beneath Devise&lt;/em&gt;). The resulting stack, for me, looks like so (important bits in bold):&lt;/p&gt;

&lt;p&gt;&lt;code&gt;use ActionDispatch::Static
use Rack::Lock
use ActiveSupport::Cache::Strategy::LocalCache
use Rack::Runtime
use Rails::Rack::Logger
use ActionDispatch::ShowExceptions
use ActionDispatch::RemoteIp
use Rack::Sendfile
use ActionDispatch::Callbacks
use ActionDispatch::Cookies
use ActionDispatch::Session::CookieStore
use ActionDispatch::ParamsParser
use Rack::MethodOverride
use ActionDispatch::Head
use ActionDispatch::BestStandardsSupport
use Rack::Tidy
use ActionDispatch::Flash
use Warden::Manager
use Sass::Plugin::Rack
run MyApp::Application.routes&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And is accomplished with this code instead the app initialization process (application.rb):&lt;/p&gt;

&lt;p&gt;&lt;code&gt;config.middleware.delete ActionDispatch::Flash   # remove from current position
config.middleware.insert_before Warden::Manager, ActionDispatch::Flash # add it right back in before Warden
config.middleware.insert_before ActionDispatch::Flash, Rack::Tidy, &amp;#39;indent-spaces&amp;#39; =&amp;gt; 2 # finally, add in Rack:Tidy before ActionDispatch::Flash.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The resulting stack looks like it’s working quite well for now.&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>What this freelancing lifestyle is missing</title>
        <link>http://www.joeloliveira.com/2010/07/28/what-this-freelancing-lifestyle-is-missing/index.html</link>
        <pubDate>Wed, 28 Jul 2010 00:00:00 -0400</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2010/07/28/what-this-freelancing-lifestyle-is-missing/what-this-freelancing-lifestyle-is-missing</guid>
        <description>&lt;p&gt;In a word – “Feedback”. Plain and simple.&lt;/p&gt;

&lt;p&gt;It’s a given that while we work with our customers and clients we get some feedback along the way – “This is good”, “This needs to move over here”, “Make this red”, etc. That sort of feedback, however, is a little superficial in the grand scheme of things and not quite the feedback we’re in need of most. The feedback I’ve been missing for the past few years is the piece of the traditional employee-employer (“working for the man”) relationship. We might bitch and moan about it when we’re there within that context, but to be frank – the annual review is crucial. How else are we to know what we need to improve on? &lt;/p&gt;

&lt;p&gt;As a freelancer – these constructs no longer exist if we don’t want them to. Which is nice to begin with. &lt;em&gt;We’re free! Right?!&lt;/em&gt; Right. But, over time the novelty and the doubt will creep in and you’ll be left wondering – “What is it that I could do better?”. I’ve found myself longing for this feedback as of late and, while it’s a little scary and my &lt;a href=&quot;http://sethgodin.typepad.com/seths_blog/2010/01/quieting-the-lizard-brain.html&quot;&gt;lizard brain&lt;/a&gt; is wailing like a banshee, I’m pulling the trigger. &lt;/p&gt;

&lt;p&gt;I’ll be asking my clients upon project completion just what it is that I did well on, and what I done poorly or could use some work. To some it might be counter-intuitive – “They hired you, right? They had to have confidence.” – but I’m more interested and excited to know for sure. No gray area. No guessing. No assumptions. Running a business is just that – it’s business. There’s nothing personal about this. Tell me how my business can be &lt;strong&gt;better&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I’m sure a good number of my fellow freelancers have been doing this for months (years) and wondering what’s taken me so long. I really wish I had an answer for that, but I don’t. Would those of you who have been doing this have any suggestions? Are there any questions you’ve asked that get the most constructive and helpful reaction?&lt;/p&gt;

&lt;p&gt;Continuing on this theme, but a different post for another day, is feedback from a different slice of our professional life – our peers. &lt;em&gt;To be continued …&lt;/em&gt;&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>Debugging in Cucumber</title>
        <link>http://www.joeloliveira.com/2010/07/17/debugging-in-cucumber/index.html</link>
        <pubDate>Sat, 17 Jul 2010 00:00:00 -0400</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2010/07/17/debugging-in-cucumber/debugging-in-cucumber</guid>
        <description>&lt;p&gt;As a relative newb’ to &lt;a href=&quot;http://cukes.info&quot;&gt;cucumber&lt;/a&gt; I realize there’s a lot to get caught up on. The one thing I &lt;strong&gt;do&lt;/strong&gt; know is that there’s a lot that I don’t know. Having said that, when I run into a barrier or an issue and I want to dig into the source to figure things out, what do you do?&lt;/p&gt;

&lt;p&gt;You break out &lt;em&gt;ruby-debug&lt;/em&gt;, of course.&lt;/p&gt;

&lt;p&gt;Add &lt;em&gt;require ‘ruby-debug’&lt;/em&gt; to features/support/env.rb and throw a breakpoint into your step definitions.&lt;/p&gt;

&lt;p&gt;That’s all well and good, and it works just fine. But what do you look for while you’re in there? I spent the better part of an evening looking for how I could sniff around the html source cucumber was testing against and couldn’t find it. Lots of searching for how to pear into @response and @request – which end up being nil as far as I can see. &lt;/p&gt;

&lt;p&gt;I had no idea.&lt;/p&gt;

&lt;p&gt;Until I read &lt;a href=&quot;http://theled.co.uk/blog/archive/2010/07/17/how-we-added-automated-html-validation-to-our-web-development-process/&quot;&gt;this post from the LoED&lt;/a&gt; on how to test your source’s validity. In there was the answer:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;page.body&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Eureka!&lt;/p&gt;

&lt;p&gt;Baby steps. I’ll figure this all out yet.&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>rvm, ree, nginx and phusion passenger</title>
        <link>http://www.joeloliveira.com/2010/03/12/rvm-ree-nginx-and-phusion-passenger/index.html</link>
        <pubDate>Fri, 12 Mar 2010 00:00:00 -0500</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2010/03/12/rvm-ree-nginx-and-phusion-passenger/rvm-ree-nginx-and-phusion-passenger</guid>
        <description>&lt;p&gt;A production web / application server that I maintain has been around for mostly wordpress and static sites we host for some of our clients. Soon, however, the need for some Rails-based client sites will be popping up for us over there. Traditionally the set-up for those apps have been in clients’ own hosting environments, or were apps I hosted in a dedicated app-server slice of my own. So, the need crept up, and now I’m left planning for now, and the future. And what is that future, you might ask (ok, probably not)? Rails 3, of course. &lt;/p&gt;

&lt;p&gt;The baseline reference implementation for Rails 3, as I know it, is 1.8.7, but has been tested to work with Ruby 1.9, and also functions properly with Phusion’s Ruby Enterprise Edition (henceforth known as REE). To say that Ruby is in a transition phase is an understatement. The community has been hard at work trying to get gems, frameworks, their associated plugins, etc, to work with all of the new shiny ruby-based toys. In order to accurately test, the RVM project has stepped up as the solution for testing and developing across multiple Ruby interpreters. &lt;/p&gt;

&lt;p&gt;New server setup, quickly moving innovation, growth and change … all of these point me in one direction – drinking the RVM kool-aid and getting right into it. But not without a few hiccups. Here are my steps in getting things rolling with rvm, nginx, ree and passenger.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Don’t install nginx at first thinking that passenger will end up being installed as a plugin, or module. I wasted some time in doing that. When you go through the process of installing passenger it’ll ask to compile and re-install nginx. So we’ll get to that eventually.&lt;/p&gt;

&lt;p&gt;To get everything compiling as I wanted I had to install a handful of obvious, and not-so-obvious, packages and libraries. To wit: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;sudo apt-get install ruby-full build-essential curl libpcre3 libpcre3-dev libpcrecpp0 libssl-dev zlib1g-dev libgcrypt11 libgcrypt11-dev bison libreadline5-dev&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Your mileage may vary.&lt;/p&gt;

&lt;p&gt;Also, the irony doesn’t escape me that we needed to install ruby, “ruby-full”, in order to install a bunch of other rubies. But hey, whatever.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Install rvm&lt;/strong&gt;. It’s as easy as &lt;a href=&quot;http://rvm.beginrescueend.com/rvm/install/&quot;&gt;following the instructions at the RVM site&lt;/a&gt;. I chose to go the gem route. Follow the instructions as are given and things will be fine. The only hiccups I had involved some libraries that are taken care of in the above package installs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Install the versions of ruby you’d like&lt;/strong&gt;. &lt;em&gt;rvm install 1.8.6,1.8.7-head,ree,1.9.1&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;According to fellow boston.rb’ist @&lt;a href=&quot;http://twitter.com/techiferous&quot;&gt;techiferous&lt;/a&gt; we use 1.8.7-head, because&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://twitter.com/techiferous/status/8751925362&quot;&gt;#&lt;/a&gt; Rails 3 needs Ruby 1.8.7. Use rvm to manage Ruby versions. Do “rvm ruby-1.8.7-head” NOT ruby-1.8.7-p249 (broken gems).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After some time compiling and wrangling everything together you should have a handful of different rubies at your disposal. Please visit the rvm site for examples, use cases and general information. It’s worth your time. &lt;/p&gt;

&lt;p&gt;At this point I switched to ruby-ree in preparation of the passenger and nginx install. &lt;em&gt;rvm ree&lt;/em&gt;. A quick &lt;em&gt;ruby –version&lt;/em&gt; now tells us that we’re running &lt;em&gt;ruby 1.8.7 (2009-12-24 patchlevel 248) [x86_64-linux], MBARI 0×6770, Ruby Enterprise Edition 2010.01&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Install Passenger and Nginx&lt;/strong&gt;. &lt;em&gt;gem install passenger &amp;amp;&amp;amp; rvmsudo passenger-install-nginx-module&lt;/em&gt; will get you started. Here’s where the install of Nginx goes down, as noted in the text after you run the command: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Nginx doesn’t support loadable modules such as some other web servers do,&lt;br&gt;
so in order to install Nginx with Passenger support, it must be recompiled.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I chose to customize my own install and selected the second option. Do whatever you’re most comfortable with. I prefer to have my compiled source in /opt/local, but again, it’s all a matter of preference. After some more compiling, we were all done and have a newly compiled install of Nginx, with Passenger, Utilizing the REE ruby interpreter.&lt;/p&gt;

&lt;p&gt;Last but not least, go thank &lt;a href=&quot;http://twitter.com/wayneeseguin&quot;&gt;Wayne Seguin&lt;/a&gt; for the work on RVM. Amazing work!&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>From the Ruby Noob Dept: Issue(s) with <em>accepts_nested_attributes_for</em></title>
        <link>http://www.joeloliveira.com/2010/02/27/from-the-ruby-noob-dept-accepts_nested_attributes_for-issues/index.html</link>
        <pubDate>Sat, 27 Feb 2010 00:00:00 -0500</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2010/02/27/from-the-ruby-noob-dept-accepts_nested_attributes_for-issues/from-the-ruby-noob-dept-accepts_nested_attributes_for-issues</guid>
        <description>&lt;p&gt;Finally took some time to jump in and refactor some nested forms at &lt;a href=&quot;http://thredded.com&quot;&gt;Thredded&lt;/a&gt; using Rails 2.3′s accepts_nested_attributes_for. Thanks to [Ryan Bates’ screencasts][2] on the topic it was fairly easy. A little code cleanup and everything worked as it should … other than &lt;em&gt;one thing&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;[2]: &lt;a href=&quot;http://railscasts.com/episodes?search=nested&quot;&gt;http://railscasts.com/episodes?search=nested&lt;/a&gt; forms&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Can’t mass-assign these protected attributes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Noticed that error in my development logfiles after a particular form wasn’t being saved. A User class had some protected, and some not, attributes and until I added the Profile attributes to it, the nested form submitting a User and it’s associated Profile record would not save.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;class User &amp;lt; ActiveRecord::Base
  has_one  :profile
  accepts_nested_attributes_for :profile
  attr_accessible :login, :email, :password, :password_confirmation
  # ...
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Needed just the Profile attributes set as accessible and ready for mass assignment&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;class User &amp;lt; ActiveRecord::Base
  has_one  :profile
  accepts_nested_attributes_for :profile
  attr_accessible :login, :email, :password, :password_confirmation, :profile_attributes
  # ...
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Another case where you need to know at all times where and if properties of your classes are locked down or not.&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>Sassy-pants</title>
        <link>http://www.joeloliveira.com/2010/02/25/sassy-pants/index.html</link>
        <pubDate>Thu, 25 Feb 2010 00:00:00 -0500</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2010/02/25/sassy-pants/sassy-pants</guid>
        <description>&lt;p&gt;&lt;img src=&quot;http://www.joeloliveira.com/wp-content/uploads/2010/02/sassy.jpg&quot; alt=&quot;&quot; title=&quot;sassy&quot;&gt;&lt;/p&gt;

&lt;p&gt;I’m pretty set in my ways professionally these days, so it’s hard sometimes to make a shift from what I’m comfortable with to a methodology that’s contrary to something that still works.&lt;/p&gt;

&lt;p&gt;Like &lt;a href=&quot;http://www.w3.org/Style/CSS/&quot;&gt;CSS&lt;/a&gt; – what the &lt;em&gt;what&lt;/em&gt; needs to change in my work-flow regarding CSS at this point? I’m more than comfortable with box-models, browser hacks, sprites, peek-a-boo and double-float margin bugs. Waking up one day and thinking – “I could be better” was the kick in the pants to try something new. Enter &lt;a href=&quot;http://sass-lang.com/&quot;&gt;Sass&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Sass is a meta-language on top of CSS that’s used to describe the style of a document cleanly and structurally, with more power than flat CSS allows. Sass both provides a simpler, more elegant syntax for CSS and implements various features that are useful for creating manageable stylesheets.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I won’t go into the syntactic sugar that makes Sass so much fun – &lt;a href=&quot;http://wiseheartdesign.com/articles/2010/01/18/the-demise-of-css-why-sass-and-languages-like-it-will-triumph/&quot;&gt;John Long&lt;/a&gt; [&lt;a href=&quot;http://wiseheartdesign.com/articles/2010/01/21/better-debugging-with-sass-and-line-comments/&quot;&gt;1&lt;/a&gt;] [&lt;a href=&quot;http://wiseheartdesign.com/articles/2010/01/22/structuring-a-sass-project/&quot;&gt;2&lt;/a&gt;] and &lt;a href=&quot;http://www.darowski.com/tracesofinspiration/2010/01/11/this-newbies-first-impressions-of-haml-and-sass/&quot;&gt;Adam Darowski&lt;/a&gt; have already done excellent jobs rounding up the high, and lower, level concepts and tricks. I highly recommend visiting and bookmarking those links for future reference.&lt;/p&gt;

&lt;p&gt;A few things I’ve bumped into, however, that bear mentioning here involve a few tools and code snippets that I went looking for as I went down that sassy path. The first being &lt;a href=&quot;http://github.com/adamstac/ruby-sass-tmbundle&quot;&gt;a Textmate bundle for sass&lt;/a&gt; I found to help out during rapid and uninterrupted development. The syntax highlights are, of course, fantastic, but the killer feature is easily the quick CSS generation keyboard shortcut. Command-R will parse and generate your CSS file right there from inside Textmate. If there are any issues a tool-tip will pop up with the error. If you switch over and reload your browser too fast to see the tool-tip you’ll see an unstyled page – a big honking notice that you were doin’ it wrong.&lt;/p&gt;

&lt;p&gt;The few bits of code, of many, that I needed to find, or create, quickly before getting down to business – Eric Meyer’s reset stylesheet, and maybe a mixin or two that I’m quick to use in a pinch – like &lt;em&gt;.clearfix&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;// Reset

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, font, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td
  :margin 0
  :padding 0
  :border 0
  :outline 0
  :font-size 100%
  :vertical-align baseline
  :background transparent

body
  :line-height 1

ol, ul
  :list-style none

blockquote, q
  :quotes none

// remember to define focus styles!
:focus
  :outline 0

ins
  :text-decoration none
// remember to highlight inserts somehow!

del
  :text-decoration line-through

table
  :border-collapse collapse
  :border-spacing 0

// ----------- Clearfix ---------------

.clearfix
  *display:                 inline-block
  &amp;amp;#038;:after
    content:                &amp;quot; &amp;quot;
    display:                block
    height:                 0
    clear:                  both
    visibility:             hidden

// ----------- Clearfix as mixin ---------------

=clearfix
  *display:                 inline-block
  &amp;amp;#038;:after
    content:                &amp;quot; &amp;quot;
    display:                block
    height:                 0
    clear:                  both
    visibility:             hidden
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Those are two solid examples of how easy it is to just jump right in.
So give it a shot – &lt;code&gt;sudo gem install haml&lt;/code&gt; to install what you need, and get to work playing.&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>Tips for developing HTML emails</title>
        <link>http://www.joeloliveira.com/2010/01/15/tips-for-developing-html-emails/index.html</link>
        <pubDate>Fri, 15 Jan 2010 00:00:00 -0500</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2010/01/15/tips-for-developing-html-emails/tips-for-developing-html-emails</guid>
        <description>&lt;p&gt;&lt;img src=&quot;http://www.joeloliveira.com/wp-content/uploads/2010/01/140341-main_Full-e1263592316562.jpg&quot; alt=&quot;Nested tables FTL&quot; title=&quot;nested tables&quot;&gt;&lt;br&gt;
&lt;strong&gt;Option 1 – Don’t do it.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;And if that’s not on the table (haha – get it?), I present to you …&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Option 2 – With a few things in mind when you approach the assignment you’ll get through it. It might not be the most fun, but it’s all doable.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;My first suggestion would be to take whatever time you estimated, and double it. Maybe triple it. If you’re reading this post in its entirety then I’m guessing it’s safe to assume these HTML emails aren’t a daily routine for you. If such is the case, the time it’ll take between your first  tag, and the moment the email is spammed sent out will not be insignificant – 2-3 times the markup, 2-3 times the complexity in testing esoteric email clients. Your mileage may vary, depending on what the targeted visual design is. It’s always up to your discretion – but the one thing I didn’t anticipate, that I know is a rule, not an exception, is the time you spend on the testing process.&lt;/p&gt;

&lt;p&gt;Before starting – these are the things you should have up front to make your life semi-easier.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;strong&gt;Create test accounts at gmail, hotmail, yahoo mail, and AOL.&lt;/strong&gt; Except you can probably ignore AOL out of principle. I felt &lt;em&gt;dirty&lt;/em&gt; just typing that. As with most things related to this practice – having to maintain test accounts at these email services is usually more trouble than it’s worth, but save yourself time and pain by using some sort of password database, such as &lt;a href=&quot;http://agilewebsolutions.com/products/1Password&quot;&gt;1password&lt;/a&gt;. Remembering passwords isn’t the hassle here – it’s the random usernames you’re going have to pull out of thin air, which you’ll end up using &lt;strong&gt;very&lt;/strong&gt; infrequently. Trust me.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;An account at an email campaign website like &lt;a href=&quot;http://www.campaignmonitor.com&quot;&gt;CampaignMonitor&lt;/a&gt; or &lt;a href=&quot;http://mailchimp.com&quot;&gt;MailChimp&lt;/a&gt;.&lt;/strong&gt; I’m a big fan of, and more prone to recommend, MailChimp not only for their pricing and offerings but the user experience throughout. It’s on my short list of sites that are actually fun to use – as silly as that may sound. Why Mailchimp? You can set up a sample campaign, point to your code on your webhost of choice, and send emails using the code hosted out there in the wild.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;A virtual machine with Windows, and the latest version of Office.&lt;/strong&gt; This one’s a given as most emails sent for B2B purposes will end up in MS Outlook. As of right now the latest is Office 2007, whose changes to how html emails are rendered are the single reason to pack up and go home if you can. Want more info? [Here you go][5]. Office costs money, obviously, but if you don’t plan on doing too many of these html emails, &lt;a href=&quot;http://us20.trymicrosoftoffice.com/default.aspx?culture=en-US&quot;&gt;there’s a free download at Microsoft’s&lt;/a&gt; that you can use as a trial for 90 days or so. Otherwise, purchase your copy legit … or find somewhere that will assist you in a … *cough* … longer “&lt;em&gt;trial period&lt;/em&gt;“.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;If it’s in the budget – sign up for a screenshot generator.&lt;/strong&gt; If you’re tasked with testing your table-bloated masterpiece in more obscure email clients – Lotus, or Lotus Notes – whatever it’s called. Outlook 2003. The aforementioned AOL. You might want to invest in an account at one of the screenshot generator testing sites like &lt;a href=&quot;http://browsercam.com&quot;&gt;BrowserCam&lt;/a&gt;, &lt;a href=&quot;http://litmusapp.com/&quot;&gt;Litmus&lt;/a&gt; or &lt;a href=&quot;http://www.campaignmonitor.com/features/make-and-send-great-looking-emails/&quot;&gt;CampaignMonitor&lt;/a&gt;. Of those three I only plunked money down to try CampaignMonitor – which worked, but the screenshots were of varying quality. Some were half-generated. One looked like someone hit “ctrl-A” before the screenshot was taken. Very odd, but it did the trick to somewhat guess how things were looking. If I were to try any of those others instead I would probably go with Litmus. Again – &lt;a href=&quot;http://en.wiktionary.org/wiki/your_mileage_may_vary&quot;&gt;ymmv&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;[5]: &lt;a href=&quot;http://www.google.com/search?q=html&quot;&gt;http://www.google.com/search?q=html&lt;/a&gt; emails outlook 2007&amp;amp;ie=utf-8&amp;amp;oe=utf-8&amp;amp;aq=t&lt;/p&gt;

&lt;p&gt;The following are the gotchas and tips I’ve become familiar with recently through the course of developing a handful of these emails. These somewhat defy the logic you might be used to when developing for the regular web – a medium that’s already tricky and nuanced. Coding for email clients is downright dumb in comparison.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;strong&gt;Plan and internally conceptualize your tables.&lt;/strong&gt; Lots and lots of tables, obviously. Look at the PSD handed off to you and, in your head, plan ahead of time how you’re going to tackle the layout. Don’t try and get cute with an overabundance of col and rowspans. It will only make things more difficult over time. I found myself starting with a main outer table shell consisting of a few rows and cells to get the content justified.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Table cells that consist of just an image – make sure those images are all aligned left&lt;/strong&gt; (or right, if you are so inclined). Some current generation browsers will leave a gap after the bottom of the image for some reason, regardless of white-space in your markup. Sure,  might look great, but it will still jack up your already delicate table layout. So remember, aligning the image will fix this.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Background images. Completely forget about them.&lt;/strong&gt; They are dead to you. If you want this email to look flawless in Outlook 2007, there are no such thing as background images – either via inline CSS or the background property for TD’s. I hope you enjoy the slicing tool in Photoshop because you’re going to end up rather proficient in it by the time you’re done. Because of this I suggest you become friendly with whoever is designing the comp you’ll be developing. Possibly send them flowers or take them out to a nice lunch. Otherwise the possibility is quite real that you’ll receive a comp with copy floating all over and on top of arbitrary visual elements.&lt;/li&gt;
&lt;li&gt; On a similar note – &lt;strong&gt;familiarize yourself with what is supported in the various email clients&lt;/strong&gt;. Campaign Monitor has put together &lt;a href=&quot;http://www.campaignmonitor.com/css/&quot;&gt;a rather handy matrix of email clients versus the CSS that is and is not supported&lt;/a&gt;. Read through this as a primer and have it tucked away for future use – you’ll probably need it. Also at Campaign Monitor – &lt;a href=&quot;http://www.campaignmonitor.com/templates/&quot;&gt;a collection of free email templates you may download&lt;/a&gt; as reference, or possibly (if you bribe them), a basis for your designer to use as “inspiration”.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;Don’t expect an inline style at the outermost TD declaring the font information to cascade into your inner table soup.&lt;/strong&gt; Somewhere in your code I suggest wrapping some comments around a collection of what you anticipate being a common set of inline style attributes. This will allow quick access to copy and paste into your ’s, ’s, ’s, etc.&lt;/li&gt;
&lt;li&gt; &lt;strong&gt;And finally – Comments.&lt;/strong&gt; Be kind with your use of comments for the express purpose of landmarking where things are in your markup. Front-end development in 2010 is a beautiful thing and we forget how miserable it used to be 6 years ago. Over 25k in html alone is a hard thing to imagine these days, but when you get up to that you’ll thank yourself if you’ve placed gigantic honkin’ comments telling yourself where the left and right content starts and ends.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Final thoughts – You will no longer take for granted the wonder and beauty that is good, clean, lovely, semantic markup. It absolutely boggles the mind that corporate IT managers will fall over themselves getting new versions of Office rolled out to their IT infrastructure, but OMG A POX ON NEW VERSIONS OF INTERNET EXPLORER (OH THE HORROR!).&lt;/p&gt;

&lt;p&gt;Last but not least – know where the closest liquor/booze/package store is. You’ll need a drink or two by the time this is over.&lt;/p&gt;

&lt;p&gt;(hat tip to &lt;a href=&quot;http://twitter.com/bmenoza&quot;&gt;@bmenoza&lt;/a&gt; for the nudge in getting this post up)&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>That&#8217;s it.  I&#8217;m going naked.</title>
        <link>http://www.joeloliveira.com/2009/12/28/thats-it-im-going-naked/index.html</link>
        <pubDate>Mon, 28 Dec 2009 00:00:00 -0500</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2009/12/28/thats-it-im-going-naked/thats-it-im-going-naked</guid>
        <description>&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2009/12/new-years-baby-1910-246x300.jpg&quot; alt=&quot;&quot; title=&quot;new years baby 1910&quot;&gt;No, not without my clothes. That would be, just … not right.&lt;/p&gt;

&lt;p&gt;This website had been in its previous state for a while, probably the last year or so, with little
traction. The vast majority of this stagnation being due to my working on implementing a design put
together by the always amazing &lt;a href=&quot;http://www.erikagreco.com/blog/&quot;&gt;Erika Greco&lt;/a&gt; (she designed my wife’s site – &lt;a href=&quot;http://bitbythebeautybug.com&quot;&gt;Bit By the Beauty
Bug&lt;/a&gt;). I loved what Erika had done – and I worked on getting it juuuust right for a long time.
After months and months of on and of work on implementing this beautiful work I decided – “It’s time
to get back to the basics”. There’s no need to get stuck in the cycle of working and re-working ad
nauseum (my name is not &lt;a href=&quot;http://www.wired.com/magazine/2009/12/fail_duke_nukem/&quot;&gt;George Broussard&lt;/a&gt;). &lt;/p&gt;

&lt;p&gt;So, I’m deciding to strip everything down to the barest of mark-up and style and concentrate on
letting this “brand” or “identity” grow organically through either the content or whatever
incremental changes I feel are right. Instead of trying to hit a &lt;strong&gt;done&lt;/strong&gt; target, let’s get real and
let this grow organically to a point where I feel it’s &lt;strong&gt;done enough&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;What does this do for me, you might ask? It allows me to write without a nagging voice in the back
of my head saying “you can publish this once the new redesign is live”. When new projects I’m
working on launch – I’m just going to post something about it instead of worrying that “the
portfolio section of the site isn’t done yet … oh the horror!”.&lt;/p&gt;

&lt;p&gt;Over time I hope to make some incremental changes to make things less ugly, but only time will tell.
I’ll be documenting things as they change for posterity’s sake so I can review how time has treated
it, and maybe share its mutation with everyone with hopes any and all feedback would make me better.&lt;/p&gt;

&lt;p&gt;So, please bear with me while I hang out here all exposed and vulnerable and stuff. It’s only
appropriate to bring in 2010 like Baby New Year.&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>Air Edie</title>
        <link>http://www.joeloliveira.com/2009/04/29/air-edie/index.html</link>
        <pubDate>Wed, 29 Apr 2009 00:00:00 -0400</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2009/04/29/air-edie/air-edie</guid>
        <description>&lt;p&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3555/3486204813_34c1547067_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3553/3487019396_fd44b6658a.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3393/3486205339_d0b659b225.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;These photos were taken one afternoon when I went to take the little Chubbster out to the courtyard. I ran into our neighbor &lt;a href=&quot;http://andrewphelps.com&quot;&gt;Andrew&lt;/a&gt; as he was out their with his super-duper high-tech Nikon DSLR. Edie went nuts and the photos above are the result. A huge thanks to Andrew and an equally large thanks to the dog for being such a photogenic weirdo.&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>Using Google Apps Email as Your App&#8217;s SMTP Server</title>
        <link>http://www.joeloliveira.com/2009/04/27/using-google-apps-email-as-your-apps-smtp-server/index.html</link>
        <pubDate>Mon, 27 Apr 2009 00:00:00 -0400</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2009/04/27/using-google-apps-email-as-your-apps-smtp-server/using-google-apps-email-as-your-apps-smtp-server</guid>
        <description>&lt;p&gt;Something I’ve held out on for a while now has been to switch over the settings for ActionMailer in
my application(s) to point to my hosted Google apps account.   I figured it was probably time to do
so as piping email notifications through my comcast email account is generally, probably, a bad idea
(courtesy of the “No Duh” department).&lt;/p&gt;

&lt;p&gt;Seems like it should be rather easy, no?  Just change action mailer to resemble:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;ActionMailer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;smtp_settings&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;:address&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;smtp.gmail.com&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;:port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;587&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;:domain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hosteddomain.com&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;:authentication&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:plain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;:user_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;account@hosteddomain.com&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;:password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;omgsup3rsecret&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Meh. Looks easy enough, right? Except for the fact Google’s got some magic TLS authentication thing
going on – you’ll run into an error in your mailers resembling &lt;em&gt;Must issue a STARTTLS command
first.&lt;/em&gt;. Enough to make you work a little harder to get the magic working.&lt;/p&gt;

&lt;p&gt;For those of you/us that are running Ruby 1.8.7 and Rails 2.3.x the answer is rather simple – add
&lt;em&gt;:enable_starttls_auto =&amp;gt; true&lt;/em&gt; to your smtp settings, which will result in :&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;ActionMailer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;smtp_settings&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;:enable_starttls_auto&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;:address&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;smtp.gmail.com&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;:port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;587&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;:domain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hosteddomain.com&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;:authentication&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:plain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;:user_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;account@hosteddomain.com&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;:password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;omgsup3rsecret&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And for the rest of you/us (that would be me) that are still sticking with Ruby 1.8.6, there is an
answer in the form of &lt;a href=&quot;http://github.com/openrain/action_mailer_tls/tree/master&quot;&gt;the action_mailer_tls gem&lt;/a&gt;. Following the readme will get you to right
where you want to be – shoveling all the mail you would like into the ether that is the interwebs.&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>Meta descriptions and keywords for each page and post in WordPress</title>
        <link>http://www.joeloliveira.com/2009/04/03/meta-descriptions-and-keywords-for-each-page-and-post-in-wordpress/index.html</link>
        <pubDate>Fri, 03 Apr 2009 00:00:00 -0400</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2009/04/03/meta-descriptions-and-keywords-for-each-page-and-post-in-wordpress/meta-descriptions-and-keywords-for-each-page-and-post-in-wordpress</guid>
        <description>&lt;p&gt;After searching for a plugin that might accommodate this in WordPress and coming up empty, I went
digging for a possible easy way to do this with the means available.   Logic dictates that with
custom fields this should be rather easy to accomplish.&lt;/p&gt;

&lt;p&gt;The only snag might have been that in retreiving a custom field for a page or a post you need the
page or post’s ID.   Usually this id is readily available within “the loop”, but what about when
we’re up in the  tags?    A little searching in the codex reveals that we can grab your pages’ ID
with &lt;strong&gt;$wp_query-&amp;gt;post-&amp;gt;ID&lt;/strong&gt;.  Fantastic – because, with that we’re pretty much done! Adding the
following in your theme’s header.php file between  …  :&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;” /&amp;gt;&lt;br&gt;
” /&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;.. and “meta_keywords” and “meta_description” as custom fields with your desired content for each
will get you to where you want to be.&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>WordPress hosted on XO Communications.</title>
        <link>http://www.joeloliveira.com/2009/03/27/wordpress-hosted-on-xo-communications/index.html</link>
        <pubDate>Fri, 27 Mar 2009 00:00:00 -0400</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2009/03/27/wordpress-hosted-on-xo-communications/wordpress-hosted-on-xo-communications</guid>
        <description>&lt;p&gt;Suffice it to say – it’s not a winning combination.   There are two definitive hacks you’ll need to
get things to work.&lt;/p&gt;

&lt;p&gt;First, &lt;a href=&quot;http://wordpress.org/support/topic/233098?replies=10&quot;&gt;a plugin to disable canonical URL redirection&lt;/a&gt;.  Second, &lt;a href=&quot;http://wordpress.org/support/topic/194305?replies=6&quot;&gt;a hack to wp-settings.php that
circumvents the XO php configuration’s not having &lt;em&gt;$_SERVER[&amp;#39;REQUEST_URI&amp;#39;]&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; the second hack will break the non-admin part of the site in the context of the current
site I’ve been working on.  So your mileage may vary.&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>Installing libmemcached and the memcached gem on Leopard</title>
        <link>http://www.joeloliveira.com/2009/02/16/installing-libmemcached-and-the-memcached-gem-on-leopard/index.html</link>
        <pubDate>Mon, 16 Feb 2009 00:00:00 -0500</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2009/02/16/installing-libmemcached-and-the-memcached-gem-on-leopard/installing-libmemcached-and-the-memcached-gem-on-leopard</guid>
        <description>&lt;p&gt;&lt;img src=&quot;http://www.joeloliveira.com/wp-content/uploads/2009/02/facepalm.jpg&quot; alt=&quot;facepalm&quot;&gt;What a huge pain in the ass.I just spent hours trying to get every combination of these two to work together and nothing worked.   A handful of versions of libmemcached had no problems installing – .24, .25 and .26 were all easy to install, both from source and from macports.  However, getting the memcached gem to install proved to be way way more difficult.I tried with a myriad of options – the most promising piece of information looked to be from &lt;a href=&quot;http://shanesveller.com/2008/03/31/memcached-and-memcached-gem-on-leopard/#comment-18&quot;&gt;this gentleman’s website&lt;/a&gt; – but also proved fruitless.The final solution, after a LOT of googling and clicking around the rubygem forums – &lt;a href=&quot;http://blog.evanweaver.com/articles/2009/01/24/secret-codes/&quot;&gt;this post at Evan Weaver’s blog&lt;/a&gt;.  The libmemcached-0.25.14.tar.gz and memcached-0.13.gem tarball and gem, respectively, installed easily without any problems.  After downloading all I had to run was:  &lt;/p&gt;

&lt;blockquote&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;tar -xzvf libmemcached-0.25.14.tar.gz

cd libmemcached-0.25.14

./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; sudo make install

cd ..

sudo gem install memcached --no-rdoc --no-ri
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;

&lt;p&gt;Done.Finally.&lt;strong&gt;Update:&lt;/strong&gt;  There seems to be a few issues with the gem I link to being installed correctly in Snow Leopard.  After spending too much time trying to figure out why the gem wouldn’t install, I installed the current memcached gem (from gemcutter) on a whim – and it compiled, and worked, without a problem instantly.   So, if you’re running Snow Leopard and looking to install the memcached gem, try out the latest version first.One caveat – I’m still using the memcached server I linked to above, version  0.25.14, still from Evan Weaver’s site&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>Session is Invalid &#8211; A Boneheaded Mistake Might be Your Problem</title>
        <link>http://www.joeloliveira.com/2008/10/26/session-is-invalid-a-boneheaded-mistake-might-be-your-problem/index.html</link>
        <pubDate>Sun, 26 Oct 2008 00:00:00 -0400</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2008/10/26/session-is-invalid-a-boneheaded-mistake-might-be-your-problem/session-is-invalid-a-boneheaded-mistake-might-be-your-problem</guid>
        <description>&lt;p&gt;Here’s something I lost hours to thanks to my own boneheaded mistake (I think I might have “lack of sleep” to blame for this one – in conjunction with ignorance).&lt;/p&gt;

&lt;p&gt;I changed my Rails app to use memcached as the caching store for obvious reasons.  Some sql queries are just too expensive so why keep hitting the damn db over and over again? Here comes memcached to the rescue!  … or not?&lt;/p&gt;

&lt;p&gt;I made all the appropriate changes, installed memcache-client, and restarted my local dev environment only to be hit with an ugly&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;session_id “whole lots of letters and numbers blarghedy blargh” is invalid&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;With the last file in the stacktrace being mem_cache_store.rb.   “What the hell?  Everything &lt;strong&gt;looks good&lt;/strong&gt; though!”After uninstalling any and every plugin that I didn’t need thinking maybe they were interfering with the cache store – newrelic_rpm,  query_reviewer and of course cache_fu – the problem remained. I reverted to regular built in filesystem caching and another error shows up – something about a cookie being tampered with.&lt;/p&gt;

&lt;p&gt;*Ding*&lt;/p&gt;

&lt;p&gt;Where the hell is the session id stored?  Of course it’s in a cookie.  After bringing up firebug and deleting the cookie (or conversely probably just restarting the browser) the problem was gone.&lt;/p&gt;

&lt;p&gt;My fatal flaws?  I overwrote the &lt;strong&gt;&lt;em&gt;config.action_controller.session :secret&lt;/em&gt;&lt;/strong&gt; I had originally in development.rb with a new one in environment.rb and I didn’t restart my browser or delete that session cookie.&lt;/p&gt;

&lt;p&gt;Ain’t that a bitch?&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>Difference between :collection and :member in Rails 2.0</title>
        <link>http://www.joeloliveira.com/2008/08/11/difference-between-collection-and-member-in-rails-20/index.html</link>
        <pubDate>Mon, 11 Aug 2008 00:00:00 -0400</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2008/08/11/difference-between-collection-and-member-in-rails-20/difference-between-collection-and-member-in-rails-20</guid>
        <description>&lt;p&gt;In getting up to speed with the new bells and whistles in Rails 2.0s RESTful routing capabilities I ran into something that puzzled me.  Of the options for a resource defined among your routes there were two similar pieces that, for one reason or another, I could just not find a solid and bulletproof explanation for – &lt;strong&gt;:collection&lt;/strong&gt; and &lt;strong&gt;:member&lt;/strong&gt;.  The :member part of it I got pretty easily for some reason, because its description is inherent in its own name … “a member among the default restful actions”.  The :collection part?  Notsomuch.  After some digging in the Rails mailing list I ran into a great, and worthy, explanation for this knucklehead by a contributer named “deegee”:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For example, with map.resources :reviews, if you want to add a method ‘delete_all’ that deletes all reviews at once. You may want to call that with ‘/reviews/delete_all’ and method PUT (never use GET to delete something). This method is acting on all resources (a collection), so the route should be:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;map.resources :reviews, :collection =&amp;gt; { :delete_all =&amp;gt; :put }&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you want to have a custom action acting on a specific resource, e.g. ‘/reviews/3/give_rating’, then your action is on a member and the route would be&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;map.resources :reviews, :member =&amp;gt; { :give_rating =&amp;gt; :put }&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;So that’s it! They’re the same other than :member working on a single resource, while :collection works on multiple.  DONE!&lt;/p&gt;

&lt;blockquote&gt;
&lt;/blockquote&gt;
</description>
      </item>
      
    
      
      <item>
        <title>Our Last Few Days In OR.</title>
        <link>http://www.joeloliveira.com/2008/06/21/our-last-few-days-in-or/index.html</link>
        <pubDate>Sat, 21 Jun 2008 00:00:00 -0400</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2008/06/21/our-last-few-days-in-or/our-last-few-days-in-or</guid>
        <description>&lt;p&gt;I think I’m going to miss this place.  Other than the stomach bug that’s been ravaging our entire family it’s been a dream weekend.  It’s the night before we head back east and I’m very cautiously crossing my fingers hoping I don’t get sick – or else I stay here as long as I need to for recovery.   Anyway – here are more select &lt;a href=&quot;http://www.flickr.com/photos/joelin0/&quot;&gt;photos from the past few days&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3163/2599768390_41e3158751.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3271/2599768178_f3de9b57bc.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3018/2599767776_5382be1496.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3242/2598938499_8b25f6db9a.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3095/2599767210_40c62f3247.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3160/2599767032_b505b12885.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3098/2599766742_f02e956d1d.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3134/2599766182_ba43be3b67.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3044/2599765628_bfdc624866.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3051/2599765264_8be41f3ec7.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3024/2598936003_bb46c55ca9.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3029/2598935401_e89da91f6a.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3116/2598934889_14e9901efa.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>Day 2 in Oregon</title>
        <link>http://www.joeloliveira.com/2008/06/20/day-2-in-oregon/index.html</link>
        <pubDate>Fri, 20 Jun 2008 00:00:00 -0400</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2008/06/20/day-2-in-oregon/day-2-in-oregon</guid>
        <description>&lt;p&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3128/2593990141_3692c86e42.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3271/2593989691_b08d5a8573.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3176/2594828158_d8c87db80e.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3143/2593988951_8a6388abec.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3276/2593989431_1fe394e6a5.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;Spent most of the day around the area, catching up with sleep after all that traveling, and hanging out with family. Just finished watching Goonies with 10 family members, totally irritating them from start to finish being “that guy” reciting lines along with the movie. Yes, I &lt;strong&gt;am&lt;/strong&gt; that obnoxious.&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>First day in Cannon Beach, OR</title>
        <link>http://www.joeloliveira.com/2008/06/19/first-day-in-cannon-beach-or/index.html</link>
        <pubDate>Thu, 19 Jun 2008 00:00:00 -0400</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2008/06/19/first-day-in-cannon-beach-or/first-day-in-cannon-beach-or</guid>
        <description>&lt;p&gt;So far, so great.  I’m loving Cannon Beach so far and spent some time out near Haystack taking photos with the family.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://farm3.static.flickr.com/2289/2592274105_c2cbd81bd0.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3140/2592274671_1fc49d0123.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3055/2593112086_fb6475707e.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3276/2593111948_9f7d7e24e0.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://farm4.static.flickr.com/3283/2592274831_a9738d2af0.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>The sad and tragic thing about this is &#8230; it&#8217;ll actually make money</title>
        <link>http://www.joeloliveira.com/2008/06/04/the-sad-and-tragic-thing-about-this-is-itll-actually-make-money/index.html</link>
        <pubDate>Wed, 04 Jun 2008 00:00:00 -0400</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2008/06/04/the-sad-and-tragic-thing-about-this-is-itll-actually-make-money/the-sad-and-tragic-thing-about-this-is-itll-actually-make-money</guid>
        <description>&lt;p&gt;Was just pointed to &lt;a href=&quot;http://blog.wired.com/27bstroke6/2008/06/service-lets-yo.html&quot;&gt;an article at Wired&lt;/a&gt; about this:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If millions of Christians suddenly disappear from the face of the Earth as the opening act for Armageddon, Threat Level thinks most nonbelievers will be too busy freaking the hell out to check their e-mail. But if they do log in, now they can be treated to some post-Rapture needling from their missing friends and loved ones, courtesy of web startup YouveBeenLeftBehind.com.&lt;/p&gt;

&lt;p&gt;For just $40 a year, believers can arrange for up to 62 people to get a final message exactly six days after the Rapture, that day when — according to Christian end times dogma — Christians will be swept up to heaven, while doubters are left behind to suffer seven years of Tribulation under a global government headed by the Antichrist&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Wow.  There are no words to describe my complete and utter disbelief (aaaahhhh,  a double entendre  — see what I did there?).&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>The one, the only, completely BONE-HEADED mistake Nintendo made with Mario Kart and the Wii
</title>
        <link>http://www.joeloliveira.com/2008/05/27/the-one-the-only-completely-bone-headed-mistake-nintendo-made-with-mario-kart-and-by-proxy-the-wii/index.html</link>
        <pubDate>Tue, 27 May 2008 00:00:00 -0400</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2008/05/27/the-one-the-only-completely-bone-headed-mistake-nintendo-made-with-mario-kart-and-by-proxy-the-wii/the-one-the-only-completely-bone-headed-mistake-nintendo-made-with-mario-kart-and-by-proxy-the-wii</guid>
        <description>&lt;p&gt;&lt;img src=&quot;http://www.joeloliveira.com/wp-content/uploads/2008/05/mario_kart_arcade_gp_20050927.jpg&quot; alt=&quot;Mario Kart&quot;&gt;I have a strange love/hate relationship with our Wii.&lt;/p&gt;

&lt;p&gt;On one hand, I love it for the few really great titles that have been released since it was introduced – Phantom Hourglass, Mario Galaxy, Guitar Hero 3, and the very latest in the Wii pantheon of “most favorite” … by a long shot … the new Mario Kart. All of these games have miraculously perfected (for the most part) what can be done on the hardware available to it. All provide hours, weeks even, of fun that can be had. Mario Kart alone has gotten me to break through the barrier of getting Sara’s entire family playing one game all at once. That’s a feat I would have never, &lt;strong&gt;ever&lt;/strong&gt;, suspected to be overcome. For that alone, I give the folks at Nintendo mega props. Kudos for getting the non-gamer to enjoy sitting in front of a TV as a family, playing your console.&lt;/p&gt;

&lt;p&gt;Which leads to this question – what about the non-casual gamer? The gamer who bought the Wii hoping to milk literal *months* of time paying for and playing your console’s games? What about the gamer with the wireless 80211G router sitting in the corner of the room beckoning for the flood of packets that will connect to the thousands, nay – millions, of other Wii owners also connected to the internet? What if you’re one of those gamers who dashed to your local store to purchase Mario Kart with hopes that you’ll finally get a chance to race your friends in Waluigi Stadium and Delfino Square with seemless internet support?&lt;/p&gt;

&lt;p&gt;Guess what pal? You got screwed. This is where the “hate” part comes in, not necessarily for the Wii in general, but for one particular aspect of it.&lt;/p&gt;

&lt;p&gt;I’ve been playing this version of Mario Kart for almost a month to the day now, and while it’s a fun game to play at home with a friend or two, it’s crystal clear that Nintendo dropped the ball on its internet game-play. Not only for Mario Kart, but for all of the internet enabled games. Why? Let’s run it down.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Putting your disc into the Wii and bringing up the game, or even jumping into the Mario Kart Wii Channel, will not automatically sign you into WFC. It will, instead, make you log into WFC before you can check to see if your friends are online. If they’re not online, shouldn’t it just leave you logged in for the off chance that your friends will log in soon? No. Not unless you sit there staring at the WFC menu screen while you wait. Instead, you’ll log &lt;strong&gt;OUT&lt;/strong&gt; of WFC and head back to your Kart Menu.&lt;strong&gt;Why?!&lt;/strong&gt;Why not leave a user logged in throughout his whole game-playing session? I should be able to play a single player game, working my way through the circuits, and maybe get a notification that “Matt” just logged in, and joined a regional network game.&lt;/li&gt;
&lt;li&gt; 12-digit numbers to be associated with, instead of a “Gamer Tag”-ish scheme like the folks in Redmond came up with. When you run into your friend at work, and you exclaim – “Dude – I just got Kart last night! I’m PSYCHED! I played it for a while and even got online!”. Your friend will reply with something to the effect of – “Perfect! Now we can play against each other online!”…pause …“So uhhh … what’s your 12 digit ‘license’ number?”After said exchange, someone in the background &lt;a href=&quot;http://www.sadtrombone.com/&quot;&gt;would be cue’d up to press the play button here&lt;/a&gt;. Because the both of you will be left thinking how stupid it is that you have not just one, but two random numbers you will never remember. You WILL both be irritated and wondering what the hell the deal is with all these random “friend codes”. Having said that – Add me to your list … &lt;strong&gt;0731-5563-2578&lt;/strong&gt; … and let me know what yours is. I promise I’ll add you, no matter how irritating it is :).&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After some friends bought their own copy of Mario Kart, I started receiving some messages to my Wii Messageboard saying something to the effect of – “Matt has sent you his Mario Kart information. If you would like to add him to your list, click Start”. Alright that’s not so bad. It keeps me from having to input those stupid numbers, right? Not too shabby!When I thought of sending my own notification to those people I found worthy enough of going through the trouble of bugging for their Wii friend codes and inputting them into the Wii, I was left scratching my head. &lt;em&gt;Where in the hell in this game is it that I send my message from?&lt;/em&gt; ** *&lt;em&gt;**I even went so far as to look in the manual&lt;/em&gt;&lt;em&gt;! (If you’re a male reading this right now, you might now think less of me. Who the hell reads the manual for help, right?) Guess what? Nothing in the manual that I could find. 
After a bunch of google’ing (*most of which was completely fruitless. What are you going to come up with when searching for “Wii Message board Mario Kart”? That’s right – a few hundred ACTUAL wii message boards!&lt;/em&gt;) and copious cursing, I found it. In the WFC menu at the very bottom, not only inconspicuous, but also sharing the same menu button as &lt;strong&gt;other&lt;/strong&gt; option. &lt;strong&gt;Why?&lt;/strong&gt; Wouldn’t they suspect their users will want the fastest and easiest way to get connected with their friends? At the very least they could have documented how to do so, no?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.joeloliveira.com/wp-content/uploads/2008/05/kart_1.jpg&quot; alt=&quot;Kart Menu part 1&quot;&gt; &lt;img src=&quot;http://www.joeloliveira.com/wp-content/uploads/2008/05/kart_2.jpg&quot; alt=&quot;Kart Menu part 2&quot;&gt;&lt;/p&gt;

&lt;p&gt;So there you have it – “Invite Wii Friends”. Tonight it was only the second item it will have to cycle around to. Other nights it was the third, because a tournament was being featured in that same button. The kicker with this bit? After I sent invitations to about 5 or 6 friends, it would not show up anymore. That’s just perfect. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Lastly – the lack of any web presence for the game. If you go to &lt;a href=&quot;http://www.mariokart.com/wii/launch/&quot;&gt;the official website&lt;/a&gt; it’s pretty much just a bunch of marketing. No way to manage your friends. No way of viewing your best times/score. No way of viewing the rankings in your area, state, country, anything. With all that data they undoubtedly have, couldn’t they put something together that could at least generate some ad revenue? Instead of a single site that noone will care to go back to again? 
If I were a true nit-picker (contrary to this post, I really am not) I could probably come up with a handful of other gripes, but I won’t. These four points above are the tip of the Kart iceberg, and are enough to only get me to come to my semi-neglected website to vent about how Nintendo screwed the pooch on what might be the one most important part of their Mario Kart franchise.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://www.joeloliveira.com/wp-content/uploads/2008/05/kart_3.jpg&quot; alt=&quot;Kart Disconnect&quot;&gt;&lt;/p&gt;

&lt;p&gt;Disconnect? I really don’t want to, but I guess I have no choice.&lt;/p&gt;

&lt;p&gt;I’d like to know what you think. &lt;a href=&quot;http://www.joeloliveira.com/2008/05/27/the-one-the-only-completely-bone-headed-mistake-nintendo-made-with-mario-kart-and-by-proxy-the-wii/&quot;&gt;Leave a comment at the bottom of this post’s page and let me know if I’m off base or not&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
      </item>
      
    
      
      <item>
        <title>ROFLCon &#8211; Day 1</title>
        <link>http://www.joeloliveira.com/2008/04/25/roflcon-day-1/index.html</link>
        <pubDate>Fri, 25 Apr 2008 00:00:00 -0400</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2008/04/25/roflcon-day-1/roflcon-day-1</guid>
        <description>&lt;p&gt;O HAI!&lt;/p&gt;

&lt;p&gt;It’s been a long day and now, at 11:30 at night, I feel like I’ve had some time to mentally digest the binging of all things “INTERWEB” today.&lt;/p&gt;

&lt;p&gt;What the hell is ROFLCon? You know the cats, with the funny captions? Leroy Jenkins? The Tron Guy? All internet memes. All people, websites, who’ve ended up being forwarded and instant messaged to THOUSANDS of people? These are the modern day 15 minutes of fame – but digital.&lt;/p&gt;

&lt;p&gt;The first day of the convention felt organized, but not quite the well oiled machine I’ve experienced at other seminars or cons. It’s not quite reasonable to expect things are going to be pristine considering (I think) it’s being put together by college undergrads, mostly. Was it a better job than I could do? DEFINITELY. I mean they got &lt;em&gt;&lt;a href=&quot;http://www.tronguy.net/&quot;&gt;TRON GUY&lt;/a&gt;&lt;/em&gt; to show up!&lt;/p&gt;

&lt;p&gt;Highlights from the first day:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Keynote by David Weinberger was good. He had some really good insight on our new meme culture and why we hold onto it and nurture it so mightily as “internet people”&lt;/li&gt;
&lt;li&gt;  &lt;a href=&quot;http://marmadukeexplained.blogspot.com/&quot;&gt;Marmaduke Explained&lt;/a&gt; guy easily took over the first panel with regards to “teh funny”&lt;/li&gt;
&lt;li&gt;  &lt;a href=&quot;http://oneredpaperclip.blogspot.com/&quot;&gt;One Red Paper Clip&lt;/a&gt; guy – a very close #2 to Marmaduke. Very funny guy.&lt;/li&gt;
&lt;li&gt;  Unexpectedly running into &lt;a href=&quot;http://dieselsweeties.com&quot;&gt;R Stevens&lt;/a&gt; outside the conference. Joining him for lunch with &lt;a href=&quot;http://www.flickr.com/photos/bre/2322667188/&quot;&gt;Scott&lt;/a&gt; from &lt;a href=&quot;http://laughingsquid.com/&quot;&gt;Laughing Squid&lt;/a&gt;, Joel from &lt;a href=&quot;http://amplifier.com&quot;&gt;Amplifier.com&lt;/a&gt; and (why am I blanking on her name?) from Penny Arcade. Reconnecting and meeting new people. Awesome!&lt;/li&gt;
&lt;li&gt;  Lolcats panel was pretty good. Lots of great one-liners (and some rather insane [in a good way] people).&lt;/li&gt;
&lt;li&gt;  Running into &lt;a href=&quot;http://www.openparenthesis.org/&quot;&gt;John Eckman&lt;/a&gt; – another Molecular Alumni – at the keynote. I KNEW it was him!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lowlights:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href=&quot;http://www.chucknorrisfacts.com/&quot;&gt;Chuck Norris &lt;/a&gt;Facts guy didn’t seem like he really wanted to make too many friends there today. Overheard calling one of his fellow panelists a “downer”. Cmon dude.&lt;/li&gt;
&lt;li&gt;  Drinking Brawndo. Not my thing.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For a lot more coverage and a lot of great photos – visit the &lt;a href=&quot;http://roflcon.org&quot;&gt;ROFLCon&lt;/a&gt; website. There’s way more there than I could even begin to to write about here. Also, you could &lt;a href=&quot;http://twitter.com/jayroh&quot;&gt;follow me on Twitter&lt;/a&gt; for running quotes and random commentary. I guess I might be doing something right – 5′ish people I don’t know started following me today. Guess that’s good? Until tomorrow – kkthxbai.&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>I&#8217;ve got an idea. I need a programmer. It&#8217;s easy!</title>
        <link>http://www.joeloliveira.com/2008/04/16/ive-got-an-idea-i-need-a-programmer-its-easy/index.html</link>
        <pubDate>Wed, 16 Apr 2008 00:00:00 -0400</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2008/04/16/ive-got-an-idea-i-need-a-programmer-its-easy/ive-got-an-idea-i-need-a-programmer-its-easy</guid>
        <description>&lt;p&gt;There’s &lt;a href=&quot;http://codeclimber.blogspot.com/2008/04/all-i-need-is-programmer.html&quot;&gt;a really great post at this blog&lt;/a&gt; about how the writer, a developer named Ethan, was approached by some acquaintances with regard to a big idea they needed help in implementing. The usual banter ensues, in which Ethan discusses the terms by which he expects to be compensated. Whether in equity or at an hourly rate of payment.&lt;/p&gt;

&lt;p&gt;The response from his pitch-man?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Hey, so, we aren’t really prepared to pay. I mean there isn’t that much to it, it’s just a PHP website with a MySql database, I was hoping you could just throw it together as a favor. Oh well, thanks anyway&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The rest of his post echoes pretty much exactly how I would feel in this situation. “There isn’t that much to it”. That line destroys me. To anyone that might ever make that assumption – take a moment to step back, and really think about what you’re saying. It blows my mind to think that there are people out there that are so quick to make the leap that “there isn’t much to” someone’s craft.&lt;/p&gt;

&lt;p&gt;“Dear Mr. Architect – can you design this house for me for free? I mean, there isn’t much to it, it’s just a house with a foundation and some walls”.&lt;/p&gt;

&lt;p&gt;On another semi-related note. If you’re looking for someone to jump in on an entrepreneurial venture – the challenge you should expect to be faced with is to find that one special, talented individual that might &lt;em&gt;share the same passion&lt;/em&gt; as you on this particular topic. From my perspective – that’s the key. Passion. Unless it’s for pay, it’s hard for some to get truly amped to knock out the creative, or code, for your new project. I’ve tried the same approach – “&lt;em&gt;Work with me on this! We’ll rule the world&lt;/em&gt;“. It’s too nebulous a proposition for most, unless they know they’re going to LOVE this thing you’re creating.&lt;/p&gt;

&lt;p&gt;My conclusion – work my ass off for a little extra money to &lt;strong&gt;invest&lt;/strong&gt; in the paid services of my friends to help me where the help is needed. I just can’t ever expect to get something knocked out of the park by someone who’s going on my word – “This is going to be HUGE!”. If my name was short for something like … Joelstradamus … then maybe I’d be more eager to prognosticate on the magnitude of my many “next pet project”s.&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>WordPress 2.5 &#8211; I&#8217;m impressed</title>
        <link>http://www.joeloliveira.com/2008/04/14/wordpress-25-im-impressed/index.html</link>
        <pubDate>Mon, 14 Apr 2008 00:00:00 -0400</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2008/04/14/wordpress-25-im-impressed/wordpress-25-im-impressed</guid>
        <description>&lt;p&gt;&lt;img src=&quot;http://www.joeloliveira.com/wp-content/uploads/2008/04/icon-big.thumbnail.png&quot; alt=&quot;wordpress icon&quot;&gt;I’m in the process of building and theming the brand new bitbythebeautybug.com for Sara. Not only is she excited, but I’m elated to be working with the newest of the new in WordPress “technology”. It’s a strange leap from all the WP installs I’ve dealt with previously, but you can tell they’ve dropped a metric ton of work into making it the most secure (as it possibly can be) and usable blogging platform out there.&lt;/p&gt;

&lt;p&gt;The first thing we did to get this ball rolling was to find a designer that truly “got” Sara’s vision for her brand. Luckily we were able to retain the services of &lt;a href=&quot;http://www.erikagreco.com/blog/&quot;&gt;a wonderful designer named Erika&lt;/a&gt;. I really liked the work she did for the &lt;a href=&quot;http://www.railsenvy.com/&quot;&gt;RailsEnvy&lt;/a&gt; guys and figured I would give it a shot to see if she would be available for some design work. Turns out she had some space in her (I’m sure) busy calendar and whipped up some designs for us. Design – complete. Much thanks to Miss Greco!&lt;/p&gt;

&lt;p&gt;On my end, the development work so far, other than slicing images, has consisted of a few tasks.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Since this would be a custom theme, I looked for the most generic, baseline theme I could find to bend to my will. After a lot of looking I decided on &lt;a href=&quot;http://designadaptations.com/notebook/rapid-development-toolset-for-wordpress-theming/&quot;&gt;one of these themes provided by Charity at Design Adaptations&lt;/a&gt;. It’s well developed, very well commented and absolutely gets out of the way of anyone who is using it as a jump-off for their custom wordpress theme. I’m still struggling with whether this is “custom” if it inherits code from someone else’s work. Regardless – she deserves kudos.&lt;/li&gt;
&lt;li&gt; One of the things I was looking forward to playing with in these recent versions of WordPress are the “Widgets” the WP team has put so much work into. Picking and choosing all of the content blocks you want to see around your site, re-ordering them as you wish – it’s just nice. See a widget you like, download, activate, put it where you want it. The only slightly difficult part was &lt;a href=&quot;http://www.quickonlinetips.com/archives/2007/11/how-to-widget-enable-wordpress-themes-in-3-easy-steps/#comment-592692&quot;&gt;to enable the sidebar for widget support&lt;/a&gt;, and then figure out just &lt;a href=&quot;http://www.quickonlinetips.com/archives/2007/11/how-to-create-multiple-dynamic-sidebars-for-wordpress-widgets/&quot;&gt;how to enable multiple “sidebars”&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt; Once the theme actually &lt;strong&gt;supported&lt;/strong&gt; all of these widgets – it was time to find them. 

&lt;ul&gt;
&lt;li&gt;  &lt;a href=&quot;http://wordpress.org/extend/plugins/flexo-archives-widget/#post-2194&quot;&gt;Flexo Archives&lt;/a&gt; – reducing the clutter that the generic Archives widget spits out.&lt;/li&gt;
&lt;li&gt;  &lt;a href=&quot;http://wordpress.org/extend/plugins/limited-category-lists-widget/&quot;&gt;Limited Catlists&lt;/a&gt; – displaying the latest posts in Category X – for our purposes, the posts categorized under “Featured”. I couldn’t find a “Featured Posts” widget so this will just have to do.&lt;/li&gt;
&lt;li&gt;  Text widget – this one comes stock with WP by default and takes care of those scenarios where a little duct tape is needed. No decent FeedBurner widget? That’s fine – copy and paste the code Feedburner gives you into the text widget. Need a small “About” widget? Text widget to the rescue.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It goes without saying – I’m far from finished, but in the initial sprint to build out this site these are the pieces I managed to take note of. All in all though, WordPress 2.5 has been nothing short of a revelation in terms of where it came &lt;em&gt;from&lt;/em&gt;, and where it’s going &lt;em&gt;to&lt;/em&gt;. &lt;strong&gt;Huge&lt;/strong&gt; props go to &lt;a href=&quot;http://www.happycog.com&quot;&gt;Happy Cog&lt;/a&gt; for the work they put into the new WP dashboard. It just feels so &lt;strong&gt;&lt;em&gt;right&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>Link Slugs with Javascript</title>
        <link>http://www.joeloliveira.com/2008/02/26/link-slugs-with-javascript/index.html</link>
        <pubDate>Tue, 26 Feb 2008 00:00:00 -0500</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2008/02/26/link-slugs-with-javascript/link-slugs-with-javascript</guid>
        <description>&lt;p&gt;Over at &lt;a href=&quot;http://thredded.com&quot;&gt;Thredded&lt;/a&gt; I am still using Rails 1.2.3 (I’m a little gun-shy to upgrade to 2.0) and, of course, felt that slugged links were necessary for both search engine optimization and making things like assessing site analytics a little easier. It doesn’t even need justification as it’s a matter of fact and necessity for any and all social platforms – blogging, forums, etc. With RoR 1.2.3 the best way to get your links &lt;em&gt;slugging&lt;/em&gt; it out was to incorporate a plugin like &lt;a href=&quot;http://tore.darell.no/pages/acts_as_sluggable&quot;&gt;acts_as_sluggable&lt;/a&gt;. It works like a charm, really, and I’ve never had any case where I needed extra functionality.&lt;/p&gt;

&lt;p&gt;… Until now. I’ve started incorporating some auto-updating magic to Thredded and needed to grab a lot of data back from an AJAX call (sorry Steve – &lt;strong&gt;XHR&lt;/strong&gt;) in the form of JSON. All well and good so far. But, when new links needed to be built on the client side, I didn’t have my handy built-in Rails ActiveRecord overrides to spit out my new slugged-up link! What to do?!&lt;/p&gt;

&lt;p&gt;I dug through the plugin source and found the function that built the url’s slug -&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;def make_slug(string)
      string.to_s.downcase.gsub(/[^a-z0-9] /, &amp;#39;-&amp;#39;).gsub(/- $/, &amp;#39;&amp;#39;).gsub(/^- $/, &amp;#39;&amp;#39;)
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;… And thought the quickest solution was just to rewrite it as a simple JS function.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;function slug(id, title)
{
      title = title.toLowerCase().replace(/[^a-z0-9] /g,&amp;#39;-&amp;#39;).replace(/- $/g,&amp;#39;&amp;#39;).replace(/^- $/g,&amp;#39;&amp;#39;);
      return(id &amp;#39;-&amp;#39; title);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      </item>
      
    
      
      <item>
        <title>Shure E2C&#8217;s Are Not the Premium Earphones You Should Pay For</title>
        <link>http://www.joeloliveira.com/2008/02/24/shure-e2cs-are-not-the-premium-earphones-you-should-pay-for/index.html</link>
        <pubDate>Sun, 24 Feb 2008 00:00:00 -0500</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2008/02/24/shure-e2cs-are-not-the-premium-earphones-you-should-pay-for/shure-e2cs-are-not-the-premium-earphones-you-should-pay-for</guid>
        <description>&lt;p&gt;&lt;img src=&quot;http://www.joeloliveira.com/wp-content/uploads/2008/02/shure_frayed_earphones.jpg&quot; alt=&quot;Frayed earphones from Shure.&quot;&gt; With the amount of music I listen to while working it’s imperative that the eardphones I wear are comfortable, noise-canceling, of decent quality and easy to tuck away. I made the obligatory shot at trying out the stock ipod earbuds way back in the early ipod days, but they didn’t fit my oddly shaped ears. The sony earbuds were pretty good but were too easy to break down with replacable earbuds too easy to fall off and lose. I didn’t want to continue repeating the cycle of purchasing new ones every 6 months, so I made my first leap into the world of semi-expensive eardphones/earbuds with a pair of &lt;a href=&quot;http://www.amazon.com/Shure-E2c-Sound-Isolating-Earphones/dp/B0000CE1UO/ref=sr_1_1?ie=UTF8&amp;amp;s=electronics&amp;amp;qid=1203890048&amp;amp;sr=1-1&quot;&gt;Shure E2C’s&lt;/a&gt; after my mother’s dog, Bailey (God love him), literally ate the last pair of Sony eardphones I would end up owning.&lt;/p&gt;

&lt;p&gt;You would think, pay a reasonable premium for the product with the great reviews, and enjoy, right? I thought the same when I first bought the E2C’s. Great sound, fit very snug in my ears, came with multiple styles of earbuds (plastic, foam, etc) and turned out to be what I thought was a great purchase. Worst case scenario – they don’t work out, something happens, and I return it thanks to Shure’s great return policy. To my great dismay this turned out to NOT be the case. After the post-purchase consumer/product honeymoon phase, the wire covering around the part of the headphones that wrapped behind the ears, started to fray. It seemed as if it just withered away after a good amount of time using them – about 9 or 10 months – to the point where the wire covering started digging into the skin behind my ears. The sound quality started to then degrade before the final straw, the exposed wires seemingly shocking me every few days. It’s possible that the shocking part could have been psychosomatic – but after the 5th or 6th time, I would doubt it.&lt;/p&gt;

&lt;p&gt;The most disappointing part after all is said and done is that this happened to not one, but &lt;strong&gt;two&lt;/strong&gt; different pairs of E2C’s in the past couple years. After the first pair frayed I purchased the second with hopes that if it happened again, I would be more vigilant on getting it replaced by Shure thanks to the 2-year warranty policy. The warranty, however, instead of being the warm and fuzzy blanket to console myself in the malaise that is my failed, faulty and disintegrating earphones, is more trouble than it’s worth.&lt;/p&gt;

&lt;p&gt;If they fail, I would have imagined they would *replace* the headphones. Do it like some computer retailers do – charge your credit card for a new replacement, ship it out to you immediately with instructions on how to ship it back. Once returned the charge on the credit card would disappear, right? That’s the kind of customer service I would expect especially since earphones are something one would use on an almost daily basis! Do I want to wait a few weeks while it’s being REPAIRED without my Flaming Lips, Ice Cube, Gnarls Barkley, Justin Timberlake or iTunes radio? No, not really!&lt;/p&gt;

&lt;p&gt;But that’s how it goes. The onus is on you &lt;a href=&quot;http://www.shure.com/ProAudio/ServiceAndWarranty/ServicePolicies/index.htm&quot;&gt;to send it back for *repair*&lt;/a&gt; and while you wait either be content in your sphere of silence, or purchase another pair of earphones to tide you over until your next pair of rice-paper wrapped earphones show up at your doorstep. To that, I say – “Fare thee well, Shure, for you have lost yourself a customer”. I am now jumping on the &lt;a href=&quot;http://www.amazon.com/Etymotic-Research-Isolator-Earphones-Black/dp/B0007WTHLY&quot;&gt;Etymotic Research bandwagon&lt;/a&gt; with hopes these last longer, and provide better customer support when I either do something stupid to destroy them (leave them to be eaten by Bailey) or the sweat glands around my ears melt these into oblivion as well. I’ll hold my breath and hope that the return policy with the people at Etymotic is better than Shure’s.&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>Cable Management For Web Workers</title>
        <link>http://www.joeloliveira.com/2008/02/24/cable-management-for-web-workers/index.html</link>
        <pubDate>Sun, 24 Feb 2008 00:00:00 -0500</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2008/02/24/cable-management-for-web-workers/cable-management-for-web-workers</guid>
        <description>&lt;p&gt;&lt;img src=&quot;http://www.joeloliveira.com/wp-content/uploads/2008/02/bl_spacestation_str18.jpg&quot; alt=&quot;BlueLounge Space Station&quot;&gt; … can be an immense pain in the toochis. Actually, it &lt;strong&gt;is&lt;/strong&gt;, unequivocally, an immense pain. You can’t hope to solve it, you can only hope to momentarily fend off. The ipod, camera, external hard drive, keyboard, mouse, power cable … all expected to live in peace and harmony in the vicinity of what is most likely a laptop.&lt;/p&gt;

&lt;p&gt;I had &lt;strong&gt;just&lt;/strong&gt; (temporarily) solved my problem when I ran into this product via &lt;a href=&quot;http://www.uncrate.com/men/gear/computer-peripherals/bluelounge-spacestation/&quot;&gt;Uncrate&lt;/a&gt; called the &lt;a href=&quot;http://www.bluelounge.com/spacestation.php&quot;&gt;Space Station&lt;/a&gt;, from BlueLounge. It tucks all of your cables underneath a small stand to rest your laptop up against, to place a small monitor on top of, maybe? From only the photos on the BlueLounge website you get the feeling that this might be a winner for those trying to come up with a solution to their own exponentially multiplying cable problem.&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>Contemplating the Journey From &#8220;Big Idea&#8221; to Success.</title>
        <link>http://www.joeloliveira.com/2008/02/07/step-1-big-idea-step-2-step-3-profit/index.html</link>
        <pubDate>Thu, 07 Feb 2008 00:00:00 -0500</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2008/02/07/step-1-big-idea-step-2-step-3-profit/step-1-big-idea-step-2-step-3-profit</guid>
        <description>&lt;p&gt;Last weekend Sara and I were in New York City, mostly for some events she wanted to attend that were
sponsored by a &lt;a href=&quot;http://totalbeauty.com&quot;&gt;blog network she’s part of&lt;/a&gt;. One of the things we were both looking forward to
was a brunch on Sunday morning with some of the people that work for the network (Partially because
I was allowed to go with her to this one! Ok, maybe only a little bit). Regardless, we had a really
good time and talked about a lot of different topics – one of which was a non-existent product that
I’ve been pondering for months now. A GPS-enabled card of some sort that could be used to track down
a lost wallet, bag, purse, etc. It’s a no-brainer right? One of those “I would buy that in a second
if they actually existed”, even though it doesn’t. The reason why is probably because of
technological constraints – cost of parts that are that small that could transmit instead of just
receive. But, once those parts are available – someone will prototype this up and will make a
fortune. Unfortunately that someone won’t be me. I’ll wait around with my credit card in hand,
waiting for a chance to purchase it (for my Mother and for Sara).&lt;/p&gt;

&lt;p&gt;The conversation popped into my head today because of &lt;a href=&quot;http://www.mikeindustries.com/blog/archive/2008/02/slam-dunk-startups&quot;&gt;a post over at Mike Davidson’s blog about
some of the big ideas that powered what he calls a “Slam-Dunk Startup”&lt;/a&gt; – Youtube, Hot-or-Not,
Google and Amazon. One point he brings up is similar to the thought I had above, that it’s not just
the idea but the ability to execute with the overwhelmingly difficult details of providing enough
bandwidth, computing power and engineering know-how to hit it out of the park.&lt;/p&gt;

&lt;p&gt;I often hear people say things like &lt;strong&gt;“if only I thought of YouTube a year before YouTube did, I’d
be rich”&lt;/strong&gt;, implying that given first-mover advantage, that person could create a company as great
as YouTube. A statement like this completely disregards just how difficult YouTube was to &lt;em&gt;build&lt;/em&gt;,
from having the balls to allow brazen copyright violation, to building a great user experience, to
scaling out the ability to serve millions of video streams a day. In other words, 99 out of 100
people who may have had the same idea at the same time would have failed to create anything
remotely as successful as YouTube.&lt;/p&gt;

&lt;p&gt;I couldn’t agree more. Having the chutzpah to take that idea, to make something of it, and &lt;strong&gt;then&lt;/strong&gt;
break through the barrier of monetary success and cultural ubiquity? That’s a huge mountain to
climb. The amount to which I can relate to this is by no means applicable – but being a solo
entrepreneur trying to build something (which is, by no means, that original) on his own is
extremely difficult. This is the reason why I have so much respect for the people that have done it.
The &lt;a href=&quot;http://www.milliondollarhomepage.com/faq.php&quot;&gt;Alex Tews&lt;/a&gt;, &lt;a href=&quot;http://en.wikipedia.org/wiki/Joshua_Schachter&quot;&gt;Joshua Schacters&lt;/a&gt; and &lt;a href=&quot;http://www.techmeme.com/&quot;&gt;Gabe Riveras&lt;/a&gt; of the world have nothing but the
most tremendous respect from me. Odds are that I’ll never reach those heights, but the journey so
far has been the fun part. We’ll wait and see.&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>The &#8220;hiatus&#8221; is over</title>
        <link>http://www.joeloliveira.com/2008/02/04/the-hiatus-is-over/index.html</link>
        <pubDate>Mon, 04 Feb 2008 00:00:00 -0500</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2008/02/04/the-hiatus-is-over/the-hiatus-is-over</guid>
        <description>&lt;p&gt;&lt;a href=&quot;http://bitbythebeautybug.com&quot;&gt;&lt;img src=&quot;http://bitbythebeautybug.com&quot; alt=&quot;Route 66&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Has it really been (well over) a year since I last posted a &lt;strong&gt;single&lt;/strong&gt; thing on this weblog? It goes without saying that that is a crying shame. Woefully neglected is too soft a phrase to use when it comes to signifying how little I’ve done with joeloliveira.com in the past year and a half. This site turned into an abandoned wasteland – deserted and stagnant.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why?&lt;/strong&gt; It borders on cliche, and could probably be filed within the “cop out” category, but for me it begins and ends with my not having the energy or motivation to write for my own website when I got home from work. I probably could have written a paragraph or two while from work, but never felt that was fair to my employers. What about those hours outside of work? Surely there are moments I could steal past 5 or 6ish to write something? Absolutely! But then the question still remains -&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What to write about?&lt;/strong&gt; There are numerous topics I ponder in the course of a day but for months – no one single target subject. I’ve usually just posted whatever events I’ve attended, fun nights out with friends, stupid miscellanea found on the internet – nothing of consequence for the majority of folks on the internet. To my friends and family – of course I know it’s interesting to YOU, but to communicate over the internet in such a blanket manner feels a bit too detached.&lt;/p&gt;

&lt;p&gt;** What now?** Well things have changed – drastically! A little over a month ago I left my job at Molecular, an internet consultancy. The company I’ve left to work for is a very small and fledgling little operation – my &lt;em&gt;own&lt;/em&gt; company. After months of preparation, nerve-wracked second guessing and laying groundwork with hopes I could pull this off I actually did it. As difficult as it was to leave such a great group of people at Molecular and all the opportunity they’ve allowed me in the past three years I decided that it was the right time to make this next big step.&lt;/p&gt;

&lt;p&gt;So far, so good. I’m excited. I am already engaged with a local ad agency helping them with a handful of their (&lt;strong&gt;immense&lt;/strong&gt;) interactive clients. This site is going to evolve into my portfolio for anyone looking for a resource to bang out nice, clean, rich interfaces with XHTML, CSS, javascript, and other interesting and challenging web-based technologies.&lt;/p&gt;

&lt;p&gt;To give you an idea as to what types of things I’m involved with – The past year and change I’ve actually been encouraging and helping Sara with &lt;a href=&quot;http://bitbythebeautybug.com&quot;&gt;her own weblog&lt;/a&gt;. Have I not told you about it yet? For shame! &lt;a href=&quot;http://bitbythebeautybug.com&quot;&gt;Go visit and take a look&lt;/a&gt; at the wonderful work she’s been doing. In addition to playing occasional tech-support and copy editor for Sara I’ve been putting in most spare hours working on my own project(s). Instead of writing about it – I’ve been trying to DO it. Think it’s difficult to post on a blog every day? Try doing it when you’re attempting to master new tools in addition to supporting the users who are helping drive your new project. It’s not easy.&lt;/p&gt;

&lt;p&gt;The ultimate end-game will be to afford myself the time to work on those few previously mentioned projects that have grown over the past few years to something I’m hoping could blossom into something beyond “pet project” status. Once I’m a little more comfortable with their status I will post announcements here.&lt;/p&gt;

&lt;p&gt;In the meantime, this site will very occasionally feature commentary on the things I find interesting about what’s going on in my industry, maybe some personal anecdotes, and hopefully some useful original content. Let’s just hope it’s not another 16 or 17 months until I write another post.&lt;/p&gt;
</description>
      </item>
      
    
      
      <item>
        <title>for those wondering where I&#8217;ve been&#8230;</title>
        <link>http://www.joeloliveira.com/2006/11/03/for-those-wondering-where-ive-been/index.html</link>
        <pubDate>Fri, 03 Nov 2006 00:00:00 -0500</pubDate>
        <author>joel.oliveira@gmail.com (Joel Oliveira)</author>
        <guid>http://www.joeloliveira.com/2006/11/03/for-those-wondering-where-ive-been/for-those-wondering-where-ive-been</guid>
        <description>&lt;p&gt;&lt;img src=&quot;http://static.flickr.com/111/287784414_df4f6a7b33_m.jpg&quot; alt=&quot;mmmmmMoustache!&quot;&gt;I’ve been holed up in my cave, growing a beard.&lt;/p&gt;
</description>
      </item>
      
    
  </channel>
</rss>

    http_version: 
  recorded_at: Thu, 06 Apr 2017 15:45:16 GMT
recorded_with: VCR 3.0.3
